Top OTHERS tickets by weighted vote

Date: December 7, 2017
 
Open OTHERS tickets with at least one vote, sorted in descending order of
their "weighted vote".  At the end of the CLJ and CLJS lists are
tickets with no votes, but they have been at least Triaged.  For the
CLJ project, Triaged means that at least one Clojure screener thinks
the ticket describes a real issue.  At the end of other project ticket
lists are all open tickets, whether they have votes or not.

Suppose someone has currently voted on N open tickets.  Then their
vote counts as (1+log(N,2))/N for each of those tickets, where
log(N,2) is the base 2 logarithm of N (formerly it was 1/N).  This new
formula gives those who vote on many tickets more 'points' to divide
up (suggested by Alex Miller).  Still, it helps to be selective to
change the rankings.

This calculation is done independently for each project, e.g. for CLJ,
for CLJS, for MATCH, etc.

Note: Ticket wranglers sometimes look at unweighted vote counts on
tickets, too, when deciding which to act upon, so feel free to vote on
many tickets if you care about them.

Each ticket is listed with:

<weighted vote>  <vote count>  <State>   [<project>-<n>] <summary line>
             voter #1 (weight that voter #1 contributes)
             voter #2 (weight that voter #2 contributes)
             ...

where State is one of the states in the JIRA flow diagram at

    http://dev.clojure.org/display/community/JIRA+workflow

Note that a state of "Backlog" is shown below if the next release is
N, and the ticket is marked for fix in release N+1 (e.g. the next
release is 1.7, but the ticket is marked for fix in release 1.8).


Project ALGOG tickets
========================================
Defect

   0 Open         [ALGOG-4] No method in multimethod 'fmap' for dispatch value: class clojure.lang.PersistentVector$ChunkedSeq

========================================
Enhancement

   0 Open         [ALGOG-5] Addition of generic modulus
   0 Open         [ALGOG-12] Implement abs, round for additional number types (patch attached)

========================================
Task

   0 Open         [ALGOG-15] aps issue


Project ALGOM tickets
========================================
Defect

   0 Open         [ALGOM-16] domonad state-m when :cond missing clause throw null pointer exception

========================================
Enhancement

   0 Open         [ALGOM-15] either monad


Project ASYNC tickets
========================================
Defect

   5 Open         [ASYNC-144] pipeline-async docstring correction
   4 Open         [ASYNC-158] (CLJS) and with multiple <! does not short-circuit in go
   4 Triaged      [ASYNC-90] Pub/sub leaks memory
   3 Open         [ASYNC-27] Compilation errors inside go block always reported as first line of block
   3 Open         [ASYNC-109] Clarify timeout doc to mention that close! should not be called on a timeout channel
   3 Triaged      [ASYNC-58] mult channel deadlocks when untapping a consuming channel whilst messages are being queued/blocked
   3 Open         [ASYNC-42] (CLJS) (try (catch :default)) inside a cljs go block raises an exception
   2 Open         [ASYNC-91] (CLJS) 'and' does not short circuit within go block in clojurescript
   2 Triaged      [ASYNC-92] go macro removes binding forms that are intialized with logical false value
   2 Open         [ASYNC-203] "dynamic binding + parking" removes top values of dynamic bindings outside
   2 Open         [ASYNC-79] (CLJS) go macro not correctly transforming (case) within a macro
   2 Open         [ASYNC-117] (CLJS) let-bindings unavailable in #js literals in go-blocks
   1 Open         [ASYNC-49] (CLJS) cljs IOC macro issue with double-dot form
   1 Triaged      [ASYNC-125] Closing a tap with a pending item blocks the mult input channel
   1 Triaged      [ASYNC-127] mult distribution behavior doesn't work as intended
   1 Open         [ASYNC-128] (CLJS) or evaluation not stopped when exp nests take
   1 Triaged      [ASYNC-170] binding in go block causes thread binding error: "Pop without matching push"
   1 Open         [ASYNC-198] core.async exception rewriting can result in an incorrect return value
   1 Open         [ASYNC-108] (CLJS) cljs to-chan hangs on infinite lazy sequences
   1 Open         [ASYNC-73] (CLJS) try-catch-finally broken inside go-blocks
   1 Vetted       [ASYNC-184] (CLJS) Port ASYNC-169 fixes to cljs
   0 Open         [ASYNC-39] Processes spawned by mix never terminate
   0 Open         [ASYNC-51] (CLJS) Core.async memory leak in Safari and Mobile Safari
   0 Open         [ASYNC-63] (CLJS) Variable called 'new' in vector in go block in CLJS causes "Object has no method 'call'" error
   0 Triaged      [ASYNC-64] Race condition when closing mults
   0 Open         [ASYNC-77] (CLJS) StackOverflowError in go macro with cemerick.cljs.test
   0 Open         [ASYNC-96] (CLJS) FixedBuffer's full checking in cljs
   0 Open         [ASYNC-97] (CLJS) alts! sporadically failing to unblock despite channel activity (Safari 7)
   0 Open         [ASYNC-118] (CLJS) A let-binding named 'arguments' not bound in go block on nodejs 
   0 Open         [ASYNC-121] (CLJS) compilation warning when calling 'satisfies?' inside a go block
   0 Open         [ASYNC-129] Channels with transducer using reduced don't work as intended
   0 Open         [ASYNC-132] (CLJS) Can't close over locals in #js in go
   0 Open         [ASYNC-145] mix throws assertion error when many channels are added to a mix.
   0 Triaged      [ASYNC-156] (CLJS) go block containing letfn does not compile
   0 Open         [ASYNC-161] `<!` inside nested `let` inside `go` block erroneously yields "<! not used inside go block" error
   0 Open         [ASYNC-163] Off-by-two in pipeline-async parallelism
   0 Triaged      [ASYNC-165] (CLJS) the binding macro/let binding is wrongly inlined
   0 Open         [ASYNC-172] (CLJS) ClojureScript `catch :default` in `go` fails with non-`js/Error` classes
   0 Open         [ASYNC-175] (CLJS) excluded bounded-count in use in cljs.core.async
   0 Open         [ASYNC-176] (CLJS) A local named `new` breaks go macro in cljs (not in clj)
   0 Open         [ASYNC-183] Completion arity of transducer is called twice
   0 Open         [ASYNC-190] (CLJS) Some non-tail-recursive loops compile without error
   0 Open         [ASYNC-192] Metadata does not persist across go-block boundaries in Clojurescript core.async
   0 Open         [ASYNC-197] `async/map` output channel not close, when has some input channel not closed, even if I closed one channel of inputs.
   0 Open         [ASYNC-199] (CLJS) A "finally" including an "if" breaks the result of the enclosing "try" if the "try" is in a "go" block
   0 Open         [ASYNC-200] (CLJS) A "finally" in a "try" in a "go" block is skipped in f a string is thrown.
   0 Open         [ASYNC-202] Channel returned by to-chan not immediately ready for taking?
   0 Open         [ASYNC-204] Writing on a closed channel doesn't commit the handler
   0 Open         [ASYNC-205] Pausing in mix is note effective
   0 Open         [ASYNC-207] Loop in go breaks type hints
   0 Open         [ASYNC-208] alts!! completes more than one operation when reading and writing to the same channel.

========================================
Enhancement

  17 Triaged      [ASYNC-94] Allow user supplied executor/thread-pool (and potentially other options) to be used in go, thread macros and chan
   8 Open         [ASYNC-74] Provide a chan? function to determine if a given var is a channel
   5 Triaged      [ASYNC-126] Add public channel "closed?" predicate
   5 Open         [ASYNC-137] (CLJS) Make (<! (timeout 0)) be closer to 0
   3 Open         [ASYNC-61] Exceptions thrown inside go/thread blocks propagate up and out of ThreadPoolExcecutor
   3 Open         [ASYNC-107] Improved docstring for alt!
   3 Triaged      [ASYNC-67] Can we get a generic sink operation?
   3 Open         [ASYNC-40] do not transform forms that have :no-transform metadata attached
   2 Open         [ASYNC-114] Allow a second arity on channel ex-handler which takes val as well as throwable
   1 Open         [ASYNC-55] Notification of items dropped from sliding/dropping buffers
   1 Vetted       [ASYNC-66] Add drain! to consume and discard a channel
   1 Open         [ASYNC-71] exception behavior for thread macro is hard coded
   1 Triaged      [ASYNC-153] Return value of pipe is not documented
   1 Open         [ASYNC-46] Add optional default channel to 'pub'
   0 Vetted       [ASYNC-65] Change chan returned from pipe to internal go block out channel
   0 Vetted       [ASYNC-69] How to better communicate "mix" lifecycle wrt coordination
   0 Open         [ASYNC-98] Less hostile message for #'go stopping at (fn [] ) boundaries 
   0 Vetted       [ASYNC-102] implement IDeref, IBlockingDeref for channels
   0 Open         [ASYNC-131] (CLJS) go! or "go-now" for CLJS
   0 Open         [ASYNC-141] Convert project to use Reader Conditionals
   0 Open         [ASYNC-148] (CLJS) Shorten core.async go block variable names
   0 Open         [ASYNC-150] Unordered pipeline
   0 Open         [ASYNC-151] Accept optional transducer in `to-chan`
   0 Open         [ASYNC-166] Clarify clojure.core.async/chan docstring
   0 Open         [ASYNC-174] Executor service cannot be shutdown
   0 Open         [ASYNC-182] (CLJS) Support usage from bootstrapped clojurescript
   0 Open         [ASYNC-189] Tap return value not documented
   0 Open         [ASYNC-193] Opaque string representation of channels in Clojurescript core.async
   0 Triaged      [ASYNC-196] Add ability to transduce values collected via clojure.core.async/into


Project CCACHE tickets
========================================
Defect

   4 Open         [CCACHE-15] It appears that TTL cache exhibits quadratic performance (+ its evict is buggy)
   2 Open         [CCACHE-40] FIFOCache StackOverflowError with high :threshold due to concat
   1 Open         [CCACHE-31] SoftCaches update in-place, other cache types don't
   0 Open         [CCACHE-32] LIRSCache defect allows it's memory use to grow without bound
   0 Open         [CCACHE-39] FIFOCache member exempted from expulsion after evict
   0 Open         [CCACHE-46] TTL cache's has? doesn't check existence of value in the underlying cache
   0 Open         [CCACHE-47] Can't evict on LIRS cache
   0 Open         [CCACHE-48] Composition of TTLCache can lead to inconsistent cache lookups

========================================
Enhancement

   6 Open         [CCACHE-42] Porting core.cache to ClojureScript
   1 Open         [CCACHE-14] Asynchronous Cache Support
   1 Open         [CCACHE-43] through method should always have cache as first argument to make it more friendly for swap!
   0 Open         [CCACHE-17] Create function backed cache
   0 Open         [CCACHE-35] Add weak-cache
   0 Open         [CCACHE-36] Allow ttl to be set for a key on cache miss
   0 Open         [CCACHE-38] Add ARC or CAR algorithm

========================================
Task

   0 Open         [CCACHE-11] Add eviction implementation to LIRSCache
   0 Open         [CCACHE-16] Benchmark v0.5.x against Google Guava
   0 Open         [CCACHE-18] Explore JSR 107- Java Temporary Caching API
   0 Open         [CCACHE-20] Add some examples to github page


Project CCONTRACTS tickets
========================================
Defect

   0 Open         [CCONTRACTS-3] & for additional arguments does not seem to work when declaring a contract
   0 Open         [CCONTRACTS-4] provide macro fails for multiple constraints

========================================
Enhancement

   0 Open         [CCONTRACTS-2] Does clojurescript support work for core.contracts?

========================================
Task

   0 Open         [CCONTRACTS-5] Fix links in and display of documentation
   0 Open         [CCONTRACTS-6] Add/improve docs of contract, clojure.core.contracts, etc.


Project CINCU tickets
========================================
Enhancement

   0 Open         [CINCU-3] apply-kw


Project CLASSPATH tickets
========================================
Defect

   0 Open         [CLASSPATH-6] classpath "empty" when classpath 0.2.2 used with clojure maven plugin 1.3.20+
   0 Open         [CLASSPATH-8] Empty classpath returned on Java 9


Project CLJCLR tickets
========================================
Defect

   0 Open         [CLJCLR-32] RT.load does not correctly map namespace to source file or dll name
   0 Open         [CLJCLR-33] REPL input broken
   0 Open         [CLJCLR-38] Use Type.AssemblyQualifiedName in ObjExpr.EmitValue when generating code for types
   0 Open         [CLJCLR-48] Error when starting Clojure.Main.exe
   0 Open         [CLJCLR-67] Cannot call new/hidden interface method
   0 Open         [CLJCLR-73] Regularize handling of clojure.compile.x environment variables
   0 Open         [CLJCLR-78] Problems building on Linux
   0 Open         [CLJCLR-81] Compute RT.DEFAULT_IMPORTS at startup
   0 Open         [CLJCLR-85] #inst "1939" fails
   0 Open         [CLJCLR-86] Case expression with Type argument and matches failes
   0 Open         [CLJCLR-88] ClojureClr assembly loading from referenced dll
   0 Open         [CLJCLR-89] Socket REPL breaks
   0 Open         [CLJCLR-90] Socket Repl Crashes the app when provided with "\'asdf" string including quotes
   0 Open         [CLJCLR-91] Socket Repl remote connections from places other than localhost
   0 Open         [CLJCLR-95] *data-readers* reset on clojure.core require
   0 Open         [CLJCLR-96] clojure/test-clojure/reducers seems to take a very long time to run

========================================
Enhancement

   1 Open         [CLJCLR-25] Clojure.Compile.exe create single dll for all compiled .clj files
   0 Open         [CLJCLR-69] Make more fields public in AST nodes
   0 Open         [CLJCLR-75] AST nodes need to record the context in which it was parsed (RHC).
   0 Open         [CLJCLR-94] Upgrading to .NET Core 2.0


Project CMEMOIZE tickets
========================================
Defect

   4 Open         [CMEMOIZE-15] ttl functions sometimes return nil
   0 Open         [CMEMOIZE-18] Confusing / erroneous documentation regarding seed values for clojure.core.memoize/memo

========================================
Enhancement

   0 Open         [CMEMOIZE-9] memo-swap! is misnamed
   0 Open         [CMEMOIZE-20] Option for snapshot to return a lazy sequence


Project CRRBV tickets
========================================
Defect

   2 Open         [CRRBV-15] rrb-vector won't compile with clojurescript: clojure.lang.ArityException: Wrong number of args (1) passed to: nodes/ranges
   0 Open         [CRRBV-9] Repeated subvec and catvec fails
   0 Open         [CRRBV-10] Calling empty in CLJS results in a PersistentVector
   0 Open         [CRRBV-11] Issue with Clojure 1.8.0-alpha2 Tuples
   0 Open         [CRRBV-12] ClassCastException: clojure.lang.PersistentVector$Node cannot be cast to [I
   0 Open         [CRRBV-13] Throws ClassCastException on assoc
   0 Open         [CRRBV-14] nth fails with ArrayIndexOutOfBoundsException 33 clojure.core.rrb-vector.rrbt.Vector/fn--19277 (rrbt.clj:373)
   0 Open         [CRRBV-17] StackOverflowError when building rrb-vector by concatenation at the beginning

========================================
Enhancement

   4 Open         [CRRBV-16] Support bootstrapped ClojureScript
   0 Open         [CRRBV-2] Efficient reverse resulting in reversed rrb-vector


Project CTYP tickets
========================================
Defect

   1 Bad: Match > [CTYP-197] No matching arities when defining multiple arity protocol method
   0 Bad: Match > [CTYP-32] Cannot instantiate variables that have bounds 
   0 Bad: Match > [CTYP-88] with-meta doesn't type check with vectors or hash-maps. 
   0 Bad: Match > [CTYP-102] large hashmaps: failure to discover subtype and error-output to complex to understand
   0 Bad: Match > [CTYP-140] HSequential things should correctly erase dotted arguments
   0 Bad: Match > [CTYP-191] Bad type syntax when parsing types of macro-generated anonymous functions from required namespaces (when the types are composed, for instance (Option AnyInteger))
   0 Bad: Match > [CTYP-195] Support for clojure.core/extend is broken when used with typed.core/defprotocol
   0 Bad: Match > [CTYP-201] Calling a multimethod from a protocol function breaks the type checker
   0 Bad: Match > [CTYP-204] Assoc doesn't work with multiple entries
   0 Bad: Match > [CTYP-209] method-type is broken
   0 Bad: Match > [CTYP-219] RPS example does not type check
   0 Bad: Match > [CTYP-221] group-by produces "Cannot resolve type: Seqable"
   0 Bad: Match > [CTYP-222] if-let on an hmap with an optional entry always expected to succeed
   0 Bad: Match > [CTYP-223] checking clojure.core/keep produces Internal Error--Cannot resolve type: Option
   0 Bad: Match > [CTYP-225] Intersections of value types broken
   0 Bad: Match > [CTYP-231] (Array X) is broken and undocumented
   0 Bad: Match > [CTYP-241] Let-aliased variables of plain Map lookups should update original map
   0 Bad: Match > [CTYP-242] adding stop-gap annotation for 'hash-map' results in runtime exception
   0 Bad: Match > [CTYP-270] "Method code too large!" with protocols (more than 38 functions in the protocol)
   0 Bad: Match > [CTYP-274] Inferred type for {{defn}} and {{typed/fn}} with the same body are different
   0 Bad: Match > [CTYP-275] Bad call to path-type: nil
   0 Bad: Match > [CTYP-277] Typechecking fails with internal assert error
   0 Bad: Match > [CTYP-279] An invalid type annotation for a function with a record argument passes a type check
   0 Bad: Match > [CTYP-282] Internal error with t/defn, sort-by and no refer all
   0 Bad: Match > [CTYP-306] pred doesn't work for non-literal HVecs with varargs
   0 Bad: Match > [CTYP-326] Let-aliasing breaks flow inference for results of `class`

========================================
Enhancement

   4 Bad: Unkn Fi [CTYP-133] Typechecker fails when checking involves an object from reify
   1 Bad: Match > [CTYP-129] select-keys on HMap returns Map with union key and value types
   1 Bad: Match > [CTYP-134] Allow namespace aliases in `ann`
   0 Bad: Match > [CTYP-72] merge doesn't seem to like records
   0 Bad: Match > [CTYP-76] Support KwArgsSeq in apply
   0 Bad: Match > [CTYP-143] extend & extend-protocol with (Class/forName "[B") as Class dispatch value fails
   0 Bad: Unkn Fi [CTYP-297] Allow defmulti without expected type
   0 Bad: Match > [CTYP-301] Abstract over keyword arguments


Project DAVL tickets

Project DCODEC tickets
========================================
Defect

   0 Open         [DCODEC-4] Cannot roundtrip an empty array
   0 Open         [DCODEC-5] Invalid input turns into null bytes

========================================
Enhancement

   0 Open         [DCODEC-1] Add simple utility functions for base64 conversions?
   0 Open         [DCODEC-3] Hex (Base 16) codec


Project DCSV tickets
========================================
Defect

   0 Open         [DCSV-6] read-csv can not handle white-space at end of line
   0 Open         [DCSV-8] Allow read-csv to read files without quoting.
   0 Open         [DCSV-14] Double quote at beginning of cell throws exception
   0 Open         [DCSV-17] Adding namespace qualifiers in documentation

========================================
Enhancement

   0 Open         [DCSV-1] pom.xml directives
   0 Open         [DCSV-9] write-csv and quote? predicate
   0 Open         [DCSV-12] Add project.clj for easier local development
   0 Open         [DCSV-13] Port data.csv to clojurescript
   0 Open         [DCSV-15] Use Reducers/Transducers for better performance & resource handling

========================================
Task

   0 Open         [DCSV-10] Specify RFC4180 compatibilty in README


Project DFINGER tickets
========================================
Defect

   0 Open         [DFINGER-3] Check whether Iterator implementation correctly implements next by throwing required NoSuchElementException


Project DFRS tickets
========================================
Defect

   0 Open         [DFRS-7] Roundtrip encoding of values are unequal under Clojure 1.6
   0 Open         [DFRS-8] missing support for bytes

========================================
Enhancement

   0 Bad: Match n [DFRS-2] Make writing footer checksums less expensive or optional
   0 Open         [DFRS-5] Add c.l.PersistentHashSet ReadHandler
   0 Open         [DFRS-6] Use a testing framework which creates nested collections


Project DGEN tickets
========================================
Defect

   0 Open         [DGEN-4] Document that floating point numbers aren't supported
   0 Open         [DGEN-5] `data.generators/reservoir-sample` is biased against early members of the collection

========================================
Enhancement

   0 Open         [DGEN-3] Gauss and triangular distributions


Project DIMAP tickets
========================================
Defect

   0 Open         [DIMAP-2] Proper seq on int-sets
   0 Open         [DIMAP-9] Unlike regular transient sets, data.int-map transient sets do not support the IFn interface
   0 Open         [DIMAP-13] Cannot merge int-sets of different density.
   0 Open         [DIMAP-14] support element lookup on transient sets
   0 Open         [DIMAP-15] PersistentIntMap equals/equiv gives wrong result 

========================================
Enhancement

   0 Open         [DIMAP-1] Support efficient rseq on int maps
   0 Open         [DIMAP-6] int-map doc string is overly restrictive?
   0 Open         [DIMAP-7] Minor typos in README and docstring
   0 Open         [DIMAP-8] Union, intersection and difference have only 2 arguments versions


Project DJSON tickets
========================================
Defect

   0 Open         [DJSON-21] Improper parsing of literals
   0 Open         [DJSON-22] Improper parsing of numbers - leading zeroes should be disallowed
   0 Open         [DJSON-24] clojure.json.data should handle non breking whitespace
   0 Open         [DJSON-25] Escaped backslash in strings throws
   0 Open         [DJSON-26] write-object can retain head of collections
   0 Open         [DJSON-27] Separator punctuation is treated as whitespace in arrays and objects

========================================
Enhancement

   0 Open         [DJSON-18] Fast way to print indented json
   0 Open         [DJSON-28] Escape control characters 0-1F even if :escape-unicode false


Project DPRIMAP tickets
========================================
Enhancement

   0 Open         [DPRIMAP-3] Add more developer info and Markdown markup to README
   0 Open         [DPRIMAP-5] Add support for subseq, rsubseq
   0 Open         [DPRIMAP-8] Add clojurescript support


Project DXML tickets
========================================
Defect

   0 Open         [DXML-47] Failed to emit CDATA in ClojureScript

========================================
Enhancement

   0 Open         [DXML-22] Adding hiccup generation function for elements
   0 Open         [DXML-40] README FileWriter example fails if platform default encoding is not UTF-8
   0 Open         [DXML-41] README - applicability of xml-seq, xml-zip?
   0 Open         [DXML-50] Indenting writer

========================================
Task

   0 Open         [DXML-45] Support UTF-8 XML beginning with BOM


Project DZIP tickets
========================================
Defect

   4 Open         [DZIP-6] Sub Entries with the same Name can't be selected

========================================
Enhancement

   0 Open         [DZIP-7] Make xml-> return empty strings instead of skipping non-matching nodes


Project INST tickets
========================================
Enhancement

   0 Open         [INST-7] scripts don't detect or warn if file referred to in cached classpath has been deleted
   0 Open         [INST-8] Move ~/.clojure to ~/.cache/clojure


Project JDATA tickets
========================================
Defect

   0 Open         [JDATA-4] to-java not working on some setters
   0 Open         [JDATA-6] to-java not working when setter takes Map as parameter

========================================
Enhancement

   0 Open         [JDATA-1] Handle primitive types and arrays
   0 Open         [JDATA-3] Simplify use cases / split up to-java
   0 Open         [JDATA-5] Translate - into camel casing in to-java
   0 Open         [JDATA-8] incorrect org.clojure/java.data convert java.util.Date use getter and setter 


Project JDBC tickets
========================================
Enhancement

   2 Open         [JDBC-163] Add option to return generated keys from execute!
   1 Open         [JDBC-48] Support stored procedures with CallableStatement
   0 Open         [JDBC-64] Support multiple result sets?
   0 Open         [JDBC-143] Make it easier to test java.jdbc in other environments

========================================
Task

   0 Open         [JDBC-157] Review specs for efficiency


Project JMX tickets
========================================
Enhancement

   2 Open         [JMX-8] Extend java.jmx to support exposing operations in created beans
   0 Open         [JMX-5] Timeout support
   0 Open         [JMX-9] Eliminate several uses of reflection in java.jmx
   0 Open         [JMX-12] Throw exception when overloaded operation is ambiguous
   0 Open         [JMX-19] Allow writable jmx beans attributes


Project JVMTA tickets

Project LOGIC tickets
========================================
Defect

   0 Open         [LOGIC-26] Generate a better error when adding facts for arities that do not exist
   0 Open         [LOGIC-28] defrel cannot be called inside function
   0 Open         [LOGIC-47] is macro needs to be improved
   0 Open         [LOGIC-48] fd/in should provide a default domain if none specified
   0 Open         [LOGIC-68] add Prolog meta-logical predicates bagof, setof, findall
   0 Open         [LOGIC-86] make `defc` more useful
   0 Open         [LOGIC-96] relevant-var? logic incorrectly discards a vars constraint set
   0 Open         [LOGIC-99] StackOverflow for large `appendo`
   0 Open         [LOGIC-114] stack overflow with conda/u
   0 Open         [LOGIC-117] one-shot constraints with multiple rands may run more than once
   0 Open         [LOGIC-119] tie disequality
   0 Open         [LOGIC-129] matcha/matchu are not faithful to the semantics of conda/condu
   0 Open         [LOGIC-130] StackOverFlowError when walking over set
   0 Open         [LOGIC-133] Add label goal
   0 Open         [LOGIC-140] compile time occurs check for pattern matching
   0 Open         [LOGIC-141] dcg: def--> ClassCastException
   0 Open         [LOGIC-142] Unified map values are returned as LVar rather than the unified value in ClojureScript
   0 Open         [LOGIC-153] deftest test-34-unify-with-metadata appears incorrect
   0 Open         [LOGIC-154] walk* of an empty set overflows the stack
   0 Open         [LOGIC-156] Finite Domains - Two consecutive calls to run* return different results
   0 Open         [LOGIC-162] FD logic doesn't always return all solutions
   0 Open         [LOGIC-166] walk* exponential in depth of tree terms?
   0 Open         [LOGIC-168] Allow partial matching of keys not existing in a map
   0 Open         [LOGIC-169] equality of non-unique lvars broken for clojure 1.7
   0 Open         [LOGIC-172] nafc doesn't work with more complex goals
   0 Open         [LOGIC-173] StackOverflowError when logic variable is unified with a set
   0 Open         [LOGIC-174] LCons fails for inequality
   0 Open         [LOGIC-175] Disequality might not eliminate when `(!= (_0 _0))`
   0 Open         [LOGIC-176] Extending IUnifyTerms doesn't work anymore
   0 Open         [LOGIC-177] binding to a deep nested vector takes too much time
   0 Open         [LOGIC-180] spec detects error in -inc macro
   0 Open         [LOGIC-181] Running rembero returns :- (!= _0 _0)
   0 Open         [LOGIC-182] An lvar unified with a keyword behaves differently from a keyword
   0 Open         [LOGIC-183] The extension of IDisunifyTerms to LCons calls seq on lcons values. LCons doesn't implement ISeq
   0 Open         [LOGIC-184] requiring pldb issues warning about referring to indexed?
   0 Open         [LOGIC-185] finite domain uncomplete results

========================================
Enhancement

   0 Open         [LOGIC-35] Core.logic equivalent of multimethods
   0 Open         [LOGIC-38] Logic Threading Macro
   0 Open         [LOGIC-43] LVar should print readably
   0 Open         [LOGIC-44] ex* could expand macros in patterns
   0 Open         [LOGIC-70] support for defaults in the simple unifier
   0 Open         [LOGIC-87] Decomplect the narrowing of the constraint space from the search order
   0 Open         [LOGIC-89] Allow application again in pattern matches
   0 Open         [LOGIC-123] Allow unification with sequential in both directions
   0 Open         [LOGIC-128] add mod/rem/abs/min/max
   0 Open         [LOGIC-136] Make benchmark suite as easy to run as `lein test`
   0 Open         [LOGIC-138] Allow tying multiple noms in one binder
   0 Open         [LOGIC-144] Extending cljs.core.logic with all of the functionality from clojure.core.logic 
   0 Open         [LOGIC-146] run macro should take * in addition to n
   0 Open         [LOGIC-164] Guard against arity missmatches between rels, facts and retractions
   0 Open         [LOGIC-165] Add non-interleaving version of conde
   0 Open         [LOGIC-170] Replacing Marker Interfaces
   0 Open         [LOGIC-171] The docstring of condu is incorrect or at least confusing
   0 Open         [LOGIC-179] Document how defn/implicit do with multiple goals does not work

========================================
Task

   0 Open         [LOGIC-157] A warning is thrown regarding the redefinition of record? in clojure 1.6.0
   0 Open         [LOGIC-178] Example of unifier on wiki uses wrong syntax?


Project MATCH tickets
========================================
Defect

   2 Open         [MATCH-105] Regex: only attempt to match string values.
   2 Open         [MATCH-114] Rather simple match fails with code too large
   1 Open         [MATCH-31] vector patterns should work on seq
   0 Open         [MATCH-49] Duplicate wildcard detection in pattern row doesn't account for locals
   0 Open         [MATCH-74] pass occurrence to emit-pattern
   0 Open         [MATCH-75] rest patterns don't work on arrays
   0 Open         [MATCH-90] ignore duplicate wildcard check if matching a local multiple times in same pattern row
   0 Open         [MATCH-93] Simple capturing of :or matches with :as doesn't work
   0 Open         [MATCH-95] recur detection logic is too naive
   0 Open         [MATCH-99] Example in Overview Wiki Page Results in an Exception
   0 Open         [MATCH-101] Apparent regression for test sharing literals
   0 Open         [MATCH-102] Do :guard predicates really need to handle :clojure.core.match/not-found?
   0 Open         [MATCH-106] variable binding fails with :or guard
   0 Open         [MATCH-107] Map pattern with vector key raises "clojure.lang.PersistentVector cannot be cast to clojure.lang.Named" exception
   0 Open         [MATCH-112] :as and & interaction issue
   0 Open         [MATCH-113] Typo in match.clj
   0 Open         [MATCH-115] AppPattern with single wildcard throws exception
   0 Open         [MATCH-117] Outdated dependencies
   0 Open         [MATCH-119] Fix typo on multimehod 
   0 Open         [MATCH-120] Empty seq match can throw Exception
   0 Open         [MATCH-122] Or matches with vectors improperly match
   0 Open         [MATCH-123] Exception when regexp-matching on a map key that does not exist.
   0 Open         [MATCH-125] Keyword literal as function apply(:<<) result

========================================
Enhancement

  13 Open         [MATCH-116] core.match clojurescript should be self-host compatible
   1 Open         [MATCH-4] Optimized pattern matching on deftype/record, POJOs
   0 Open         [MATCH-2] Matching Diagnostics
   0 Open         [MATCH-8] Implement (p|q)ba heuristics
   0 Open         [MATCH-40] Allow or'ing of guard functions
   0 Open         [MATCH-64] Improve match compile times
   0 Open         [MATCH-65] cata matching
   0 Open         [MATCH-72] complexity analysis
   0 Open         [MATCH-78] Switches on literals should happen via `case` not `cond`
   0 Open         [MATCH-103] Support for lists in patterns.
   0 Open         [MATCH-110] convert to .cljc

========================================
Task

   0 Open         [MATCH-7] Eliminate distinction between leaf-bind-expr and bind-expr
   0 Open         [MATCH-79] Tidy up for 0.2.0, add comprehensive doc strings
   0 Open         [MATCH-108] Upgrade org.clojure/tools.analyzer.jvm dependency to "0.6.6"
   0 Open         [MATCH-118] Simplify computation of necessary column


Project MCOMB tickets
========================================
Defect

   0 Open         [MCOMB-9] WARNING: clojure.math.combinatorics/lex-permutations is deprecated. at line 278 resources\test\out\clojure\math\combinatorics.cljc

========================================
Enhancement

   0 Open         [MCOMB-6] Support ClojureScript by converting from CLJ to CLJC
   0 Open         [MCOMB-8] Better support for sets

========================================
Task

   0 Open         [MCOMB-3] Please add project.clj


Project MTOWER tickets

Project NREPL tickets
========================================
Defect

   2 Open         [NREPL-3] Adopt default port
   1 Open         [NREPL-69] Interrupt of load-file generates java.lang.ThreadDeath exception
   0 Open         [NREPL-24] :session key is overloaded
   0 Open         [NREPL-28] Clarify semantics for String encoding
   0 Open         [NREPL-33] Consider making session and eval functionality more accessible
   0 Open         [NREPL-36] Too many DynamicClassLoaders created
   0 Open         [NREPL-48] *1/*2/*3/*e nil in cloned session
   0 Open         [NREPL-54] No version of nrepl when connect to the lein-droid REPL
   0 Open         [NREPL-76] Some messages to an nREPL server never result in a response that includes status :done
   0 Open         [NREPL-80] Thread used to evaluate forms changes over time
   0 Open         [NREPL-81] Transport/send hangs when sending non-bencodable information outside of :value slot
   0 Open         [NREPL-82] Descriptor for "add-stdin" appears to incorrectly declare :returns "need-input"
   0 Open         [NREPL-84] Log "foo" for (misc/log "foo"), not nil
   0 Open         [NREPL-87] start-server throws exception on alpine linux 3.6

========================================
Enhancement

   2 Open         [NREPL-55] Support custom value rendering middleware
   1 Open         [NREPL-77] Expose installed middlewares via some mechanism
   0 Open         [NREPL-4] Provide sane multiplexing of output in the face of multithreaded, asynchronous operation
   0 Open         [NREPL-15] Allow clients to specify an ID for newly-retained sessions
   0 Open         [NREPL-29] Provide a mechanism for overriding an operation
   0 Open         [NREPL-43] Document the availability/usage of *e, *1, *2, ... in nREPL
   0 Open         [NREPL-44] Expose JMX MBean to provide list of available nREPL endpoints
   0 Open         [NREPL-85] Add initial authentication support and simple default
   0 Open         [NREPL-86] Update current version number in README

========================================
Task

   0 Bad: Unkn Fi [NREPL-74] Drop support for Clojure older than 1.5
   0 Open         [NREPL-75] Devise a way to isolate middleware deps from regular deps


Project TANAL tickets
========================================
Defect

   0 Open         [TANAL-100] Fix method matcher

========================================
Enhancement

   0 Open         [TANAL-84] Simplify tag handling for castings/nil insertion/value popping
   0 Open         [TANAL-113] Convert clojure.lang.Compiler/analyze to a map conforming to tools.analyzer.jvm


Project TBENCH tickets
========================================
Defect

   1 Open         [TBENCH-12] Alioth k-nucleotide
   0 Open         [TBENCH-11] Alioth reverse-complement
   0 Open         [TBENCH-14] Alioth fannkuch-redux

========================================
Enhancement

   0 Open         [TBENCH-2] Alioth chameneos-redux
   0 Open         [TBENCH-3] Alioth meteor-contest
   0 Open         [TBENCH-4] Alioth pidigits
   0 Open         [TBENCH-16] Add performance testing for STM


Project TCHECK tickets
========================================
Defect

   1 Open         [TCHECK-124] defspec does not set property :name properly
   0 Open         [TCHECK-26] defspec does not respect (is (thrown? ...))
   0 Open         [TCHECK-57] Performance regression in map generator between 0.5.8 and 0.5.9
   0 Open         [TCHECK-89] the clojure-test namespace has a global atom
   0 Open         [TCHECK-106] Variable-sized collection generators have exponential sizing issues when composed
   0 Open         [TCHECK-111] The latest recursive-gen algorithm seems to exhibit a peculiar lack of variety in depths
   0 Open         [TCHECK-112] bind doesn't shrink very well
   0 Open         [TCHECK-120] size of args is conflated with depth in shrink tree
   0 Open         [TCHECK-133] Are the map bindings in gen/let actually solving a problem?
   0 Open         [TCHECK-137] Self-host tests not runnable

========================================
Enhancement

   3 Open         [TCHECK-2] pos-int is confusingly named
   3 Open         [TCHECK-15] gen/for macro for alternate combinator syntax
   2 Open         [TCHECK-7] Add nested property support
   1 Open         [TCHECK-8] Bound tests and shrinks in time
   1 Open         [TCHECK-97] Support Unicode chararacters for char based generators
   1 Open         [TCHECK-123] Interactive documentation
   0 Open         [TCHECK-4] Handle sigint
   0 Open         [TCHECK-9] Properly document how :max-size works 
   0 Open         [TCHECK-14] re-organize README and doc/
   0 Open         [TCHECK-19] Permit a data-structure containing generators to be used as a generator
   0 Open         [TCHECK-21] Rerunning a particular failure is difficult.
   0 Open         [TCHECK-38] Generators for functions?
   0 Open         [TCHECK-41] Add helpers for deprecating generators
   0 Open         [TCHECK-44] for-all should support nesting
   0 Open         [TCHECK-48] Add sublist generator
   0 Open         [TCHECK-53] property creating function similar to map as alternative to for-all*
   0 Open         [TCHECK-58] Alternate clojure.test integration
   0 Open         [TCHECK-60] string from regular expression generator
   0 Open         [TCHECK-70] Redesign gen/choose
   0 Open         [TCHECK-71] Exponential generator
   0 Open         [TCHECK-72] Poisson generator
   0 Open         [TCHECK-84] Add gen/uniform-double
   0 Open         [TCHECK-85] prop/for-all should let later bindings refer to earlier bindings
   0 Open         [TCHECK-87] New stats feature: Adds ability to assign labels to test cases to report the test case distribution when running a test
   0 Open         [TCHECK-95] quick-check should report how long it ran
   0 Open         [TCHECK-96] quick-check should accept an arg for maximum shrinking time
   0 Open         [TCHECK-99] Create a generator that will limit the size of a generated sequence
   0 Open         [TCHECK-101] Add a prop/for-all alternative to c.t.c.clojure-test that uses clojure.test/is &c
   0 Open         [TCHECK-102] Provide a mechanism for getting output from a test run after interrupting it.
   0 Open         [TCHECK-110] Enable shrinking on recursive generators
   0 Open         [TCHECK-115] run tests in parallel on the jvm
   0 Open         [TCHECK-119] Checking of interesting edge cases is not very creative
   0 Open         [TCHECK-121] for-all's signature suggests multiple expressions are allowed, but this doesn't work as you'd expect
   0 Open         [TCHECK-122] include :last-generated-value in error thrown by such-that-helper
   0 Open         [TCHECK-126] Refactor c.t.c/quick-check as a state machine to provide more extension points
   0 Open         [TCHECK-128] test.check doesn't seem to have a macro for asynchronous tests


Project TCLI tickets

Project TDEPS tickets
========================================
Defect

   0 Open         [TDEPS-8] tools.deps does not handle maven relocations
   0 Open         [TDEPS-12] Depending on same artifact, multiple different classifiers
   0 Open         [TDEPS-13] Support for excluding dependencies

========================================
Enhancement

   4 Open         [TDEPS-15] consider combining -R and -C option for aliases
   2 Open         [TDEPS-9] Authentication on Maven repositories
   1 Open         [TDEPS-17] Consider lib overrides
   1 Open         [TDEPS-18] Make alias handling functions public
   0 Open         [TDEPS-19] Command line switch for configuration overlay
   0 Open         [TDEPS-20] Cannot resolve Maven artifacts through proxy
   0 Open         [TDEPS-21] No diagnostic information when building classpath fails


Project TEMJVM tickets
========================================
Defect

   0 Open         [TEMJVM-11] Stack error in recur

========================================
Enhancement

   0 Open         [TEMJVM-5] Optimize constant metadata emission
   0 Open         [TEMJVM-10] Fix line number info
   0 Open         [TEMJVM-12] Improve test coverage
   0 Open         [TEMJVM-13] Modularize -emit method
   0 Open         [TEMJVM-14] Emit unchecked locals

========================================
Task

   0 Open         [TEMJVM-9] Change fn name munging scheme to match the one introduced with CLJ-1330


Project TGEN tickets
========================================
Defect

   0 Open         [TGEN-5] Defspec leaks :tag from args into generated code

========================================
Enhancement

   0 Open         [TGEN-4] Typo in defspec docstring


Project TLOG tickets
========================================
Defect

   1 Open         [TLOG-20] log/info removes quotes from strings making debugging harder than it needs to be.

========================================
Enhancement

   0 Open         [TLOG-14] Logging backend (factory) for Android
   0 Open         [TLOG-16] Add ClojureScript support?


Project TMACRO tickets
========================================
Defect

   1 Open         [TMACRO-4] README.md still says 0.1.2 is latest stable release
   0 Open         [TMACRO-3] Handling of namespaced symbols
   0 Open         [TMACRO-5] Misplaced doc string for function protected?
   0 Open         [TMACRO-6] with-symbol-macros fails to preserve set sortedness
   0 Open         [TMACRO-7] Extra paren in expansion
   0 Open         [TMACRO-8] System Performance

========================================
Enhancement

   0 Open         [TMACRO-1] Preserve metadata for (at least) unexpanded forms


Project TNS tickets
========================================
Defect

   2 Open         [TNS-6] Attempt to reload deleted file
   1 Open         [TNS-7] Stack overflow on refresh after circular dependency detected
   0 Open         [TNS-24] Broken tracker after mis-named namespace
   0 Open         [TNS-42] scan-dirs / scan-all can return incorrect dependencies when both clj and cljc files define same namespace
   0 Open         [TNS-43] ns-decl? treats (ns) as valid

========================================
Enhancement

   0 Open         [TNS-37] c.t.n.move: does not support to move .cljc files
   0 Open         [TNS-39] Single classpath argument for c.t.n.move
   0 Open         [TNS-45] File in invalid path will mark namespace for reload
   0 Open         [TNS-46] Add project.clj for easier development
   0 Open         [TNS-48] Ability to track files that are not namespaces
   0 Open         [TNS-49] Show full path for circular dependency exceptions


Project TRDR tickets
========================================
Enhancement

   0 Open         [TRDR-45] The error feedback from the read-string function would be improved if it used an indexing reader.

========================================
Task

   0 Open         [TRDR-29] Simple benchmarking bash script to test before & after applying a batch


Project TTRACE tickets
========================================
Enhancement

   0 Open         [TTRACE-9] Use aprint when displaying value
   0 Open         [TTRACE-10] Add throttling/rate-limiting
   0 Open         [TTRACE-13] Implicitly quote the name space in the trace-ns macro
   0 Open         [TTRACE-14] Document how to trace non-public fns


Project UNIFY tickets
========================================
Defect

   0 Open         [UNIFY-7] Dead code in occurs? function
   0 Open         [UNIFY-8] Handle sets correctly
   0 Open         [UNIFY-9] Between clojure 1.6 and clojure 1.7, unification of maps stopped working correctly

========================================
Task

   0 Open         [UNIFY-3] Enhance documentation
   0 Open         [UNIFY-6] Create tests for k&v map unification
