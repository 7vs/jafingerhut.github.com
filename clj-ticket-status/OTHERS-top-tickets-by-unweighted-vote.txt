Top OTHERS tickets by weighted vote

Date: May 5, 2016
 
Open OTHERS tickets with at least one vote, sorted in descending order of
their "weighted vote".  At the end of the CLJ and CLJS lists are
tickets with no votes, but they have been at least Triaged.  For the
CLJ project, Triaged means that at least one Clojure screener thinks
the ticket describes a real issue.  At the end of other project ticket
lists are all open tickets, whether they have votes or not.

Suppose someone has currently voted on N open tickets.  Then their
vote counts as 1/N for each of those tickets.  Thus voting on all
tickets has the same relative effect on their ranking as voting on no
tickets.  You must be selective to change the rankings.

Each person gets 1 weighted vote to divide up as they wish for each
project, e.g. 1 for CLJ, 1 for CLJS, 1 for MATCH, etc.

Note: Ticket wranglers sometimes look at unweighted vote counts on
tickets, too, when deciding which to act upon, so feel free to vote on
many tickets if you care about them.

Each ticket is listed with:

<weighted vote>  <vote count>  <State>   [<project>-<n>] <summary line>
             voter #1 (weight that voter #1 contributes)
             voter #2 (weight that voter #2 contributes)
             ...

where State is one of the states in the JIRA flow diagram at

    http://dev.clojure.org/display/community/JIRA+workflow

Note that a state of "Backlog" is shown below if the next release is
N, and the ticket is marked for fix in release N+1 (e.g. the next
release is 1.7, but the ticket is marked for fix in release 1.8).


Project ALGOG tickets
========================================
Defect

   0 Open         [ALGOG-4] No method in multimethod 'fmap' for dispatch value: class clojure.lang.PersistentVector$ChunkedSeq

========================================
Enhancement

   0 Open         [ALGOG-5] Addition of generic modulus
   0 Open         [ALGOG-12] Implement abs, round for additional number types (patch attached)

========================================
Task

   0 Open         [ALGOG-15] aps issue


Project ALGOM tickets
========================================
Defect

   0 Open         [ALGOM-16] domonad state-m when :cond missing clause throw null pointer exception

========================================
Enhancement

   0 Open         [ALGOM-15] either monad


Project ASYNC tickets
========================================
Defect

  11 Triaged      [ASYNC-138] Go blocks leak memory
   5 Triaged      [ASYNC-100] core.async with multiple catch blocks causing weird loop behaviour
   4 Triaged      [ASYNC-90] Pub/sub leaks memory
   3 Open         [ASYNC-27] Compilation errors inside go block always reported as first line of block
   3 Triaged      [ASYNC-32] onto-chan retains head of input sequence causing OutOfMemoryError
   2 Open         [ASYNC-79] (ClojureScript) go macro not correctly transforming (case) within a macro
   2 Open         [ASYNC-158] and with multiple <! does not short-circuit in go
   2 Open         [ASYNC-109] Clarify timeout doc to mention that close! should not be called on a timeout channel
   2 Open         [ASYNC-117] let-bindings unavailable in #js literals in go-blocks
   2 Triaged      [ASYNC-92] go macro removes binding forms that are intialized with logical false value
   2 Triaged      [ASYNC-58] mult channel deadlocks when untapping a consuming channel whilst messages are being queued/blocked
   1 Open         [ASYNC-49] cljs IOC macro issue with double-dot form
   1 Open         [ASYNC-91] 'and' does not short circuit within go block in clojurescript
   1 Triaged      [ASYNC-127] mult distribution behavior doesn't work as intended
   1 Open         [ASYNC-128] or evaluation not stopped when exp nests take
   1 Open         [ASYNC-144] pipeline-async docstring correction
   1 Triaged      [ASYNC-154] (require :reload-all) causes NullPointerException
   1 Open         [ASYNC-159] promise-chan in ClojureScript is broken
   1 Triaged      [ASYNC-125] Closing a tap with a pending item blocks the mult input channel
   1 Open         [ASYNC-78] deadlock in multi catch
   0 Triaged      [ASYNC-4] Record literals become ordinary maps
   0 Open         [ASYNC-39] Processes spawned by mix never terminate
   0 Open         [ASYNC-51] Core.async memory leak in Safari and Mobile Safari
   0 Open         [ASYNC-54] MAX-QUEUE-SIZE has a wrong type-hint
   0 Open         [ASYNC-63] Variable called 'new' in vector in go block in CLJS causes "Object has no method 'call'" error
   0 Triaged      [ASYNC-64] Race condition when closing mults
   0 Open         [ASYNC-70] documentation of thread macro should include behavior of nil (closes the channel)
   0 Open         [ASYNC-73] try-catch-finally broken inside go-blocks
   0 Open         [ASYNC-77] StackOverflowError in go macro with cemerick.cljs.test (CLJS)
   0 Open         [ASYNC-96] FixedBuffer's full checking in cljs
   0 Open         [ASYNC-97] CLJS: alts! sporadically failing to unblock despite channel activity (Safari 7)
   0 Open         [ASYNC-108] cljs to-chan hangs on infinite lazy sequences
   0 Open         [ASYNC-111] maps are represented different inside and outside of go blocks
   0 Triaged      [ASYNC-113] alt!! should not evaluate the :default expr if a non-default clause is selected
   0 Open         [ASYNC-118] (ClojureScript) A let-binding named 'arguments' not bound in go block on nodejs 
   0 Open         [ASYNC-121] compilation warning when calling 'satisfies?' inside a go block
   0 Triaged      [ASYNC-122] Parking in finally block replaces result
   0 Open         [ASYNC-123] Channel operations fail in for comprehension.
   0 Open         [ASYNC-129] Channels with transducer using reduced don't work as intended
   0 Open         [ASYNC-132] Can't close over locals in #js in go
   0 Open         [ASYNC-134] async/alts!! with an empty vector throws ArrayIndexOutOfBoundsException
   0 Open         [ASYNC-145] mix throws assertion error when many channels are added to a mix.
   0 Triaged      [ASYNC-155] Preserve loop binding metadata when inside a go block
   0 Open         [ASYNC-156] (ClojureScript) go block containing letfn does not compile
   0 Open         [ASYNC-157] Reflection warning with doseq
   0 Open         [ASYNC-161] `<!` inside nested `let` inside `go` block erroneously yields "<! not used inside go block" error
   0 Open         [ASYNC-163] Off-by-two in pipeline-async parallelism
   0 Open         [ASYNC-165] the binding macro/let binding is wrongly inlined

========================================
Enhancement

  11 Triaged      [ASYNC-94] Allow user supplied executor/thread-pool (and potentially other options) to be used in go, thread macros and chan
   4 Open         [ASYNC-137] Make (<! (timeout 0)) be closer to 0
   4 Open         [ASYNC-119] ClojureScript: combine cljs.core.async.macros and cljs.core.async
   4 Triaged      [ASYNC-126] Add public channel "closed?" predicate
   3 Open         [ASYNC-107] Improved docstring for alt!
   3 Open         [ASYNC-61] Exceptions thrown inside go/thread blocks propagate up and out of ThreadPoolExcecutor
   2 Triaged      [ASYNC-67] Can we get a generic sink operation?
   2 Open         [ASYNC-74] Provide a chan? function to determine if a given var is a channel
   2 Open         [ASYNC-114] Allow a second arity on channel ex-handler which takes val as well as throwable
   2 Open         [ASYNC-40] do not transform forms that have :no-transform metadata attached
   2 Triaged      [ASYNC-143] Assert that fixed buffers must have size > 0
   2 Open         [ASYNC-142] Rename ClojureScript namespace from cljs.core.async to clojure.core.async
   1 Open         [ASYNC-55] Notification of items dropped from sliding/dropping buffers
   1 Open         [ASYNC-71] exception behavior for thread macro is hard coded
   0 Open         [ASYNC-46] Add optional default channel to 'pub'
   0 Vetted       [ASYNC-65] Change chan returned from pipe to internal go block out channel
   0 Vetted       [ASYNC-66] Add drain! to consume and discard a channel
   0 Vetted       [ASYNC-69] How to better communicate "mix" lifecycle wrt coordination
   0 Open         [ASYNC-98] Less hostile message for #'go stopping at (fn [] ) boundaries 
   0 Vetted       [ASYNC-102] implement IDeref, IBlockingDeref for channels
   0 Open         [ASYNC-130] Improve put! docstring to mention no more than 1024 pending puts are allowed
   0 Open         [ASYNC-131] go! or "go-now" for CLJS
   0 Open         [ASYNC-141] Convert project to use Reader Conditionals
   0 Open         [ASYNC-148] Shorten core.async go block variable names
   0 Open         [ASYNC-150] Unordered pipeline
   0 Open         [ASYNC-151] Accept optional transducer in `to-chan`
   0 Triaged      [ASYNC-153] Return value of pipe is not documented
   0 Open         [ASYNC-166] Clarify clojure.core.async/chan docstring

========================================
Task

   1 Open         [ASYNC-116] Convert core.async ClojureScript tests to cljs.test


Project CCACHE tickets
========================================
Defect

   1 Open         [CCACHE-31] SoftCaches update in-place, other cache types don't
   0 Open         [CCACHE-15] It appears that TTL cache exhibits quadratic performance (+ its evict is buggy)
   0 Open         [CCACHE-32] LIRSCache defect allows it's memory use to grow without bound
   0 Open         [CCACHE-39] FIFOCache member exempted from expulsion after evict
   0 Open         [CCACHE-40] FIFOCache StackOverflowError with high :threshold due to concat

========================================
Enhancement

   4 Open         [CCACHE-42] Porting core.cache to ClojureScript
   1 Open         [CCACHE-14] Asynchronous Cache Support
   1 Open         [CCACHE-43] through method should always have cache as first argument to make it more friendly for swap!
   0 Open         [CCACHE-17] Create function backed cache
   0 Open         [CCACHE-35] Add weak-cache
   0 Open         [CCACHE-36] Allow ttl to be set for a key on cache miss
   0 Open         [CCACHE-38] Add ARC or CAR algorithm

========================================
Task

   0 Open         [CCACHE-11] Add eviction implementation to LIRSCache
   0 Open         [CCACHE-16] Benchmark v0.5.x against Google Guava
   0 Open         [CCACHE-18] Explore JSR 107- Java Temporary Caching API
   0 Open         [CCACHE-20] Add some examples to github page


Project CCONTRACTS tickets
========================================
Defect

   0 Open         [CCONTRACTS-3] & for additional arguments does not seem to work when declaring a contract
   0 Open         [CCONTRACTS-4] provide macro fails for multiple constraints

========================================
Enhancement

   0 Open         [CCONTRACTS-2] Does clojurescript support work for core.contracts?

========================================
Task

   0 Open         [CCONTRACTS-5] Fix links in and display of documentation
   0 Open         [CCONTRACTS-6] Add/improve docs of contract, clojure.core.contracts, etc.


Project CINCU tickets
========================================
Enhancement

   0 Open         [CINCU-3] apply-kw


Project CLASSPATH tickets
========================================
Defect

   0 Open         [CLASSPATH-6] classpath "empty" when classpath 0.2.2 used with clojure maven plugin 1.3.20+


Project CLJCLR tickets
========================================
Defect

   0 Open         [CLJCLR-32] RT.load does not correctly map namespace to source file or dll name
   0 Open         [CLJCLR-33] REPL input broken
   0 Open         [CLJCLR-38] Use Type.AssemblyQualifiedName in ObjExpr.EmitValue when generating code for types
   0 Open         [CLJCLR-48] Error when starting Clojure.Main.exe
   0 Open         [CLJCLR-67] Cannot call new/hidden interface method
   0 Open         [CLJCLR-73] Regularize handling of clojure.compile.x environment variables
   0 Open         [CLJCLR-78] Problems building on Linux

========================================
Enhancement

   1 Open         [CLJCLR-25] Clojure.Compile.exe create single dll for all compiled .clj files
   0 Open         [CLJCLR-69] Make more fields public in AST nodes
   0 Open         [CLJCLR-75] AST nodes need to record the context in which it was parsed (RHC).


Project CMEMOIZE tickets
========================================
Defect

   0 Open         [CMEMOIZE-15] ttl functions sometimes return nil
   0 Open         [CMEMOIZE-18] Confusing / erroneous documentation regarding seed values for clojure.core.memoize/memo

========================================
Enhancement

   0 Open         [CMEMOIZE-9] memo-swap! is misnamed
   0 Open         [CMEMOIZE-20] Option for snapshot to return a lazy sequence


Project CRRBV tickets
========================================
Defect

   0 Open         [CRRBV-9] Repeated subvec and catvec fails
   0 Open         [CRRBV-10] Calling empty in CLJS results in a PersistentVector
   0 Open         [CRRBV-11] Issue with Clojure 1.8.0-alpha2 Tuples
   0 Open         [CRRBV-12] ClassCastException: clojure.lang.PersistentVector$Node cannot be cast to [I

========================================
Enhancement

   0 Open         [CRRBV-2] Efficient reverse resulting in reversed rrb-vector


Project CTYP tickets
========================================
Defect

   2 Bad: Match > [CTYP-176] No such var: ana/ns->relpath when loading the ClojureScript typechecker
   1 Open         [CTYP-129] select-keys on HMap returns Map with union key and value types
   1 Open         [CTYP-197] No matching arities when defining multiple arity protocol method
   1 Bad: Match > [CTYP-262] Accessing keys from a Heterogeneous Map w/ Polymorphic type signature throws type error
   0 Bad: Match > [CTYP-32] Cannot instantiate variables that have bounds 
   0 Open         [CTYP-35] Should use fresh names when checking plambdas
   0 Open         [CTYP-47] Expected: IFn, Actual (Fn [Any -> Any])
   0 Bad: Match > [CTYP-49] Applying flow filter resulted in local being bottom
   0 Bad: Match > [CTYP-52] Heterogeneous Vector is not ISeqable in CLJS
   0 Bad: Match > [CTYP-72] merge doesn't seem to like records
   0 Bad: Match > [CTYP-87] Constraint generation does not handle variance well
   0 Bad: Match > [CTYP-88] with-meta doesn't type check with vectors or hash-maps. 
   0 Bad: Match > [CTYP-102] large hashmaps: failure to discover subtype and error-output to complex to understand
   0 Bad: Match > [CTYP-140] HSequential things should correctly erase dotted arguments
   0 Bad: Match > [CTYP-143] extend & extend-protocol with (Class/forName "[B") as Class dispatch value fails
   0 Open         [CTYP-171] nil should not be treated as subtype of repeat list/vector
   0 Bad: Match > [CTYP-173] (first (filter ...)) type checks in Clojure, not ClojureScript
   0 Bad: Match > [CTYP-177] Compile error with core.async
   0 Open         [CTYP-178] Dissimilar lengths of HVecs in a union doesn't type-check
   0 Open         [CTYP-182] macros which define functions containing named anonymous functions crash
   0 Open         [CTYP-188] ann-record fails for argument-less records
   0 Open         [CTYP-190] pred doesn't handle much
   0 Open         [CTYP-191] Bad type syntax when parsing types of macro-generated anonymous functions from required namespaces (when the types are composed, for instance (Option AnyInteger))
   0 Open         [CTYP-195] Support for clojure.core/extend is broken when used with typed.core/defprotocol
   0 Open         [CTYP-201] Calling a multimethod from a protocol function breaks the type checker
   0 Open         [CTYP-204] Assoc doesn't work with multiple entries
   0 Open         [CTYP-209] method-type is broken
   0 Open         [CTYP-218] wrap-clj-repl causes error
   0 Open         [CTYP-221] group-by produces "Cannot resolve type: Seqable"
   0 Open         [CTYP-222] if-let on an hmap with an optional entry always expected to succeed
   0 Open         [CTYP-223] checking clojure.core/keep produces Internal Error--Cannot resolve type: Option
   0 Open         [CTYP-224] Lein REPL Autocomplete in typed namespaces throws a type error
   0 Open         [CTYP-225] Intersections of value types broken
   0 Open         [CTYP-228] Type signature for sort is incorrect - never returns nil
   0 Bad: Match > [CTYP-231] (Array X) is broken and undocumented
   0 Bad: Unkn Fi [CTYP-232] Let-aliased variabled of HVec lookups should update original HVec
   0 Bad: Unkn Fi [CTYP-241] Let-aliased variables of plain Map lookups should update original map
   0 Open         [CTYP-242] adding stop-gap annotation for 'hash-map' results in runtime exception
   0 Bad: Match > [CTYP-270] "Method code too large!" with protocols (more than 38 functions in the protocol)
   0 Bad: Unkn Fi [CTYP-272] check-ns: Assert failed: (r/Type? t)
   0 Bad: Unkn Fi [CTYP-274] Inferred type for {{defn}} and {{typed/fn}} with the same body are different
   0 Bad: Unkn Fi [CTYP-275] Bad call to path-type: nil
   0 Bad: Unkn Fi [CTYP-277] Typechecking fails with internal assert error
   0 Bad: Match > [CTYP-278] Impossible to annotate protocol in other namespace
   0 Open         [CTYP-279] An invalid type annotation for a function with a record argument passes a type check
   0 Open         [CTYP-282] Internal error with t/defn, sort-by and no refer all
   0 Open         [CTYP-293] Should check upcast to Dyn
   0 Bad: Unkn Fi [CTYP-303] cast doesn't work for recursive types
   0 Bad: Unkn Fi [CTYP-306] pred doesn't work for non-literal HVecs with varargs
   0 Open         [CTYP-312] pred doesn't work with polymorphic protocols?

========================================
Enhancement

   4 Bad: Match > [CTYP-133] Typechecker fails when checking involves an object from reify
   3 Bad: Match > [CTYP-167] Several failure cases for comp for polyadic fns and type variables
   1 Bad: Match > [CTYP-134] Allow namespace aliases in `ann`
   0 Bad: Match > [CTYP-8] Support complex map manipulation functions
   0 Open         [CTYP-9] Support metadata types
   0 Open         [CTYP-11] Infer good types for loop locals
   0 Open         [CTYP-12] Handle primitives properly
   0 Open         [CTYP-13] Understand common contract functions
   0 Bad: Match > [CTYP-50] Support overriding fields
   0 Open         [CTYP-76] Support KwArgsSeq in apply
   0 Bad: Match > [CTYP-98] Implement a defrecord macro for Clojure
   0 Open         [CTYP-109] Better error message for TFn app
   0 Open         [CTYP-110] Add satisfies?
   0 Open         [CTYP-119] Record/datatypes should update like HMaps via occurrence typing
   0 Open         [CTYP-124] case should utilize negative information
   0 Open         [CTYP-131] Support (apply f (apply concat hmap))
   0 Open         [CTYP-138] Support mutually recursive types
   0 Open         [CTYP-139] Extend what can used as HMap key
   0 Open         [CTYP-156] Add special arities to `nth` if we know exactly the index argument and CountRange
   0 Open         [CTYP-160] Correctly check IFn ancestor with type/record
   0 Open         [CTYP-165] GSOC 2014 Heterogeneous operations & Dotted Polymorphism
   0 Open         [CTYP-187] Add a defn- macro for private functions
   0 Bad: Unkn Fi [CTYP-192] Use memoization in file-mapping to improve performance.
   0 Open         [CTYP-194] HMap merged type
   0 Open         [CTYP-202] Provide a way to annotate a throw-on-nil function
   0 Open         [CTYP-205] Better filter checking
   0 Open         [CTYP-206] Fixed as rest args
   0 Triaged      [CTYP-217] Basic support for transients
   0 Open         [CTYP-219] RPS example does not type check
   0 Open         [CTYP-220] Data generator for a type
   0 Open         [CTYP-226] Update clojure.core/get-in annotations to use polymorphic function types (similar to clojure.core/get)
   0 Open         [CTYP-227] Show file and line number of duplicate definitions
   0 Open         [CTYP-230] Improve error messages by highlighting unmatched argument
   0 Open         [CTYP-233] Java interop should consider automatic numeric promotions
   0 Bad: Match > [CTYP-235] Warn on duplicate defalias'
   0 Open         [CTYP-240] Annotations for clojure.instant, clojure.template, clojure.set clojure.data and clojure.repl namespaces
   0 Open         [CTYP-243] Dispatch on set of keys
   0 Open         [CTYP-244] Filtering with an instantiated identity function doesn't guarantee removal of nil
   0 Bad: Match > [CTYP-249] Propositional subtyping should consider the lexical type environment
   0 Open         [CTYP-260] Add Queue and BlockingQueue to altered classes
   0 Bad: Match > [CTYP-261] Typed Transients patch
   0 Bad: Unkn Fi [CTYP-267] bigdec, bigint and biginteger eats (U Number String)
   0 Bad: Unkn Fi [CTYP-268] Use clojure.lang.Compiler's analyzer
   0 Bad: Match > [CTYP-271] reduce form with (U nil Num) accumulator needs inst to type check
   0 Bad: Match > [CTYP-273] `recur` treated differently from a recursive call
   0 Bad: Match > [CTYP-276] first on HVec strange/wrong result
   0 Open         [CTYP-289] Add ability to specify the static type expected for a particular extend-type dispatch
   0 Open         [CTYP-290] Support older versions of Clojure in the runtime module
   0 Open         [CTYP-292] Provide a new alias for Any, dedicated for use as a placeholder, thus reserving Any for situations when truly every type is acceptable.
   0 Open         [CTYP-294] Infer untyped vars via unsafe Dyn-like type
   0 Bad: Unkn Fi [CTYP-297] Allow defmulti without expected type
   0 Open         [CTYP-298] Should blame sub-parts of casts
   0 Bad: Match > [CTYP-301] Abstract over keyword arguments
   0 Open         [CTYP-302] Add typed Compiler
   0 Bad: Unkn Fi [CTYP-309] Export typed vars with contracts to untyped namespaces
   0 Bad: Unkn Fi [CTYP-311] Use dynamic inference to generate library annotations

========================================
Task

   0 Bad: Match > [CTYP-15] Eliminate the need to specify all ancestors in alter-class.
   0 Open         [CTYP-236] Refactor core.async annnotations into its own jar
   0 Open         [CTYP-237] Convert .clj files to .cljc
   0 Open         [CTYP-238] Move CLJS checker to its own jar
   0 Bad: Unkn Fi [CTYP-245] Remove NotTypeFilter
   0 Bad: Unkn Fi [CTYP-310] Remove support for mixing "typed eval" and check-ns


Project DAVL tickets

Project DCODEC tickets
========================================
Defect

   0 Open         [DCODEC-4] Cannot roundtrip an empty array

========================================
Enhancement

   0 Open         [DCODEC-1] Add simple utility functions for base64 conversions?
   0 Open         [DCODEC-3] Hex (Base 16) codec


Project DCSV tickets
========================================
Defect

   0 Open         [DCSV-6] read-csv can not handle white-space at end of line
   0 Open         [DCSV-7] data.csv does not handle BOMs
   0 Open         [DCSV-8] Allow read-csv to read files without quoting.

========================================
Enhancement

   0 Open         [DCSV-1] pom.xml directives
   0 Open         [DCSV-5] No option for parsing into maps
   0 Open         [DCSV-9] write-csv and quote? predicate
   0 Open         [DCSV-12] Add project.clj for easier local development
   0 Open         [DCSV-13] Port data.csv to clojurescript

========================================
Task

   0 Open         [DCSV-10] Specify RFC4180 compatibilty in README


Project DFINGER tickets
========================================
Defect

   0 Open         [DFINGER-3] Check whether Iterator implementation correctly implements next by throwing required NoSuchElementException


Project DFRS tickets
========================================
Defect

   0 Open         [DFRS-7] Roundtrip encoding of values are unequal under Clojure 1.6
   0 Open         [DFRS-8] missing support for bytes

========================================
Enhancement

   0 Bad: Match n [DFRS-2] Make writing footer checksums less expensive or optional
   0 Open         [DFRS-5] Add c.l.PersistentHashSet ReadHandler
   0 Open         [DFRS-6] Use a testing framework which creates nested collections


Project DGEN tickets
========================================
Defect

   0 Open         [DGEN-4] Document that floating point numbers aren't supported

========================================
Enhancement

   0 Open         [DGEN-3] Gauss and triangular distributions


Project DIMAP tickets
========================================
Defect

   0 Open         [DIMAP-2] Proper seq on int-sets

========================================
Enhancement

   0 Open         [DIMAP-1] Support efficient rseq on int maps
   0 Open         [DIMAP-4] Worth the effort to make int-map and int-set sorted?
   0 Open         [DIMAP-6] int-map doc string is overly restrictive?
   0 Open         [DIMAP-7] Minor typos in README and docstring
   0 Open         [DIMAP-8] Union, intersection and difference have only 2 arguments versions


Project DJSON tickets
========================================
Defect

   0 Open         [DJSON-21] Improper parsing of literals
   0 Open         [DJSON-22] Improper parsing of numbers - leading zeroes should be disallowed

========================================
Enhancement

   0 Open         [DJSON-18] Fast way to print indented json


Project DPRIMAP tickets
========================================
Enhancement

   0 Open         [DPRIMAP-3] Add more developer info and Markdown markup to README
   0 Open         [DPRIMAP-5] Add support for subseq, rsubseq
   0 Open         [DPRIMAP-8] Add clojurescript support


Project DXML tickets
========================================
Defect

   0 Open         [DXML-15] data.xml can't parse own output if there's a colon in an attribute name
   0 Open         [DXML-27] Element java.util.Date throws IllegalArgumentException
   0 Open         [DXML-31] Parsed events cannot be emitted

========================================
Enhancement

   3 Open         [DXML-13] Support for preserving whitespace between tags
   2 Open         [DXML-10] Support for DOCTYPE when emitting XML
   0 Open         [DXML-22] Adding hiccup generation function for elements
   0 Open         [DXML-25] Emit Empty Elements using EmptyElementTag
   0 Open         [DXML-29] ClojureScript support

========================================
Task

   0 Open         [DXML-30] Generate inconsistent namespace prefixes for subtrees, randomly omit namespace URIs in non-prefixed elements


Project DZIP tickets

Project JDATA tickets
========================================
Defect

   0 Open         [JDATA-4] to-java not working on some setters
   0 Open         [JDATA-6] to-java not working when setter takes Map as parameter

========================================
Enhancement

   0 Open         [JDATA-1] Handle primitive types and arrays
   0 Open         [JDATA-2] Eliminate many occurrences of Clojure reflection in java.data
   0 Open         [JDATA-3] Simplify use cases / split up to-java
   0 Open         [JDATA-5] Translate - into camel casing in to-java

========================================
Task

   0 Bad: Unkn Ap [JDATA-7] new issue


Project JDBC tickets
========================================
Enhancement

   3 Open         [JDBC-99] The age of reduce is upon us
   1 Open         [JDBC-48] Support stored procedures with CallableStatement
   0 Open         [JDBC-37] Provide support for alternate transaction strategies
   0 Open         [JDBC-64] Support multiple result sets?


Project JMX tickets
========================================
Enhancement

   1 Open         [JMX-8] Extend java.jmx to support exposing operations in created beans
   0 Open         [JMX-5] Timeout support
   0 Open         [JMX-9] Eliminate several uses of reflection in java.jmx
   0 Open         [JMX-12] Throw exception when overloaded operation is ambiguous


Project JVMTA tickets

Project LOGIC tickets
========================================
Defect

   0 Open         [LOGIC-26] Generate a better error when adding facts for arities that do not exist
   0 Open         [LOGIC-28] defrel cannot be called inside function
   0 Open         [LOGIC-47] is macro needs to be improved
   0 Open         [LOGIC-48] fd/in should provide a default domain if none specified
   0 Open         [LOGIC-68] add Prolog meta-logical predicates bagof, setof, findall
   0 Open         [LOGIC-86] make `defc` more useful
   0 Open         [LOGIC-96] relevant-var? logic incorrectly discards a vars constraint set
   0 Open         [LOGIC-99] StackOverflow for large `appendo`
   0 Open         [LOGIC-114] stack overflow with conda/u
   0 Open         [LOGIC-117] one-shot constraints with multiple rands may run more than once
   0 Open         [LOGIC-119] tie disequality
   0 Open         [LOGIC-129] matcha/matchu are not faithful to the semantics of conda/condu
   0 Open         [LOGIC-130] StackOverFlowError when walking over set
   0 Open         [LOGIC-133] Add label goal
   0 Open         [LOGIC-140] compile time occurs check for pattern matching
   0 Open         [LOGIC-141] dcg: def--> ClassCastException
   0 Open         [LOGIC-142] Unified map values are returned as LVar rather than the unified value in ClojureScript
   0 Open         [LOGIC-153] deftest test-34-unify-with-metadata appears incorrect
   0 Open         [LOGIC-154] walk* of an empty set overflows the stack
   0 Open         [LOGIC-156] Finite Domains - Two consecutive calls to run* return different results
   0 Open         [LOGIC-162] FD logic doesn't always return all solutions
   0 Open         [LOGIC-166] walk* exponential in depth of tree terms?
   0 Open         [LOGIC-168] Allow partial matching of keys not existing in a map
   0 Open         [LOGIC-169] equality of non-unique lvars broken for clojure 1.7
   0 Open         [LOGIC-172] nafc doesn't work with more complex goals
   0 Open         [LOGIC-173] StackOverflowError when logic variable is unified with a set
   0 Open         [LOGIC-174] LCons fails for inequality
   0 Open         [LOGIC-175] Disequality might not eliminate when `(!= (_0 _0))`
   0 Open         [LOGIC-176] Extending IUnifyTerms doesn't work anymore
   0 Open         [LOGIC-177] binding to a deep nested vector takes too much time

========================================
Enhancement

   0 Open         [LOGIC-35] Core.logic equivalent of multimethods
   0 Open         [LOGIC-38] Logic Threading Macro
   0 Open         [LOGIC-43] LVar should print readably
   0 Open         [LOGIC-44] ex* could expand macros in patterns
   0 Open         [LOGIC-70] support for defaults in the simple unifier
   0 Open         [LOGIC-87] Decomplect the narrowing of the constraint space from the search order
   0 Open         [LOGIC-89] Allow application again in pattern matches
   0 Open         [LOGIC-123] Allow unification with sequential in both directions
   0 Open         [LOGIC-128] add mod/rem/abs/min/max
   0 Open         [LOGIC-136] Make benchmark suite as easy to run as `lein test`
   0 Open         [LOGIC-138] Allow tying multiple noms in one binder
   0 Open         [LOGIC-144] Extending cljs.core.logic with all of the functionality from clojure.core.logic 
   0 Open         [LOGIC-146] run macro should take * in addition to n
   0 Open         [LOGIC-164] Guard against arity missmatches between rels, facts and retractions
   0 Open         [LOGIC-165] Add non-interleaving version of conde
   0 Open         [LOGIC-170] Replacing Marker Interfaces
   0 Open         [LOGIC-171] The docstring of condu is incorrect or at least confusing

========================================
Task

   0 Open         [LOGIC-157] A warning is thrown regarding the redefinition of record? in clojure 1.6.0
   0 Open         [LOGIC-178] Example of unifier on wiki uses wrong syntax?


Project MATCH tickets
========================================
Defect

   1 Open         [MATCH-31] vector patterns should work on seq
   0 Open         [MATCH-49] Duplicate wildcard detection in pattern row doesn't account for locals
   0 Open         [MATCH-74] pass occurrence to emit-pattern
   0 Open         [MATCH-75] rest patterns don't work on arrays
   0 Open         [MATCH-90] ignore duplicate wildcard check if matching a local multiple times in same pattern row
   0 Open         [MATCH-93] Simple capturing of :or matches with :as doesn't work
   0 Open         [MATCH-95] recur detection logic is too naive
   0 Open         [MATCH-99] Example in Overview Wiki Page Results in an Exception
   0 Open         [MATCH-101] Apparent regression for test sharing literals
   0 Open         [MATCH-102] Do :guard predicates really need to handle :clojure.core.match/not-found?
   0 Open         [MATCH-105] Regex: only attempt to match string values.
   0 Open         [MATCH-106] variable binding fails with :or guard
   0 Open         [MATCH-107] Map pattern with vector key raises "clojure.lang.PersistentVector cannot be cast to clojure.lang.Named" exception
   0 Open         [MATCH-112] :as and & interaction issue

========================================
Enhancement

   1 Open         [MATCH-4] Optimized pattern matching on deftype/record, POJOs
   0 Open         [MATCH-2] Matching Diagnostics
   0 Open         [MATCH-8] Implement (p|q)ba heuristics
   0 Open         [MATCH-40] Allow or'ing of guard functions
   0 Open         [MATCH-64] Improve match compile times
   0 Open         [MATCH-65] cata matching
   0 Open         [MATCH-72] complexity analysis
   0 Open         [MATCH-78] Switches on literals should happen via `case` not `cond`
   0 Open         [MATCH-103] Support for lists in patterns.
   0 Open         [MATCH-110] convert to .cljc

========================================
Task

   0 Open         [MATCH-7] Eliminate distinction between leaf-bind-expr and bind-expr
   0 Open         [MATCH-79] Tidy up for 0.2.0, add comprehensive doc strings
   0 Open         [MATCH-108] Upgrade org.clojure/tools.analyzer.jvm dependency to "0.6.6"


Project MCOMB tickets
========================================
Enhancement

   0 Open         [MCOMB-6] Support ClojureScript by converting from CLJ to CLJC
   0 Open         [MCOMB-7] Fix reflection errors

========================================
Task

   0 Open         [MCOMB-3] Please add project.clj


Project MTOWER tickets

Project NREPL tickets
========================================
Defect

   2 Open         [NREPL-3] Adopt default port
   1 Open         [NREPL-69] Interrupt of load-file generates java.lang.ThreadDeath exception
   0 Open         [NREPL-24] :session key is overloaded
   0 Open         [NREPL-28] Clarify semantics for String encoding
   0 Open         [NREPL-33] Consider making session and eval functionality more accessible
   0 Open         [NREPL-36] Too many DynamicClassLoaders created
   0 Open         [NREPL-48] *1/*2/*3/*e nil in cloned session
   0 Open         [NREPL-54] No version of nrepl when connect to the lein-droid REPL
   0 Open         [NREPL-76] Some messages to an nREPL server never result in a response that includes status :done
   0 Open         [NREPL-80] Thread used to evaluate forms changes over time
   0 Open         [NREPL-81] Transport/send hangs when sending non-bencodable information outside of :value slot

========================================
Enhancement

   1 Open         [NREPL-77] Expose installed middlewares via some mechanism
   0 Open         [NREPL-4] Provide sane multiplexing of output in the face of multithreaded, asynchronous operation
   0 Open         [NREPL-15] Allow clients to specify an ID for newly-retained sessions
   0 Open         [NREPL-29] Provide a mechanism for overriding an operation
   0 Open         [NREPL-43] Document the availability/usage of *e, *1, *2, ... in nREPL
   0 Open         [NREPL-44] Expose JMX MBean to provide list of available nREPL endpoints
   0 Open         [NREPL-55] Support custom value rendering middleware

========================================
Task

   0 Bad: Unkn Fi [NREPL-74] Drop support for Clojure older than 1.5
   0 Open         [NREPL-75] Devise a way to isolate middleware deps from regular deps


Project TANAL tickets
========================================
Defect

   0 Open         [TANAL-100] Fix method matcher
   0 Open         [TANAL-117] tools.analyzer.jvm 0.6.8 adds extra quoting on :arglists metadata over 0.6.7
   0 Open         [TANAL-118] ClassNotFoundException byte[] thrown when analyzing an expression

========================================
Enhancement

   0 Open         [TANAL-84] Simplify tag handling for castings/nil insertion/value popping
   0 Open         [TANAL-113] Convert clojure.lang.Compiler/analyze to a map conforming to tools.analyzer.jvm

========================================
Task

   0 Open         [TANAL-42] Document the AST nodes && the passes
   0 Open         [TANAL-85] enhance validations in t.a.js


Project TBENCH tickets
========================================
Defect

   1 Open         [TBENCH-12] Alioth k-nucleotide
   0 Open         [TBENCH-11] Alioth reverse-complement
   0 Open         [TBENCH-14] Alioth fannkuch-redux

========================================
Enhancement

   0 Open         [TBENCH-2] Alioth chameneos-redux
   0 Open         [TBENCH-3] Alioth meteor-contest
   0 Open         [TBENCH-4] Alioth pidigits
   0 Open         [TBENCH-16] Add performance testing for STM


Project TCHECK tickets
========================================
Defect

   1 Open         [TCHECK-61] defspec throwing errors in cljs
   1 Open         [TCHECK-73] gen/int can generate doubles
   0 Open         [TCHECK-26] defspec does not respect (is (thrown? ...))
   0 Open         [TCHECK-34] clojure.test reporting is uninformative
   0 Open         [TCHECK-57] Performance regression in map generator between 0.5.8 and 0.5.9
   0 Open         [TCHECK-80] last-trial-report (used by trial-report-periodic) is not being reset at :begin-test-var in cljs
   0 Open         [TCHECK-89] the clojure-test namespace has a global atom
   0 Open         [TCHECK-98] gen/let uses gen/bind even when it doesn't have to

========================================
Enhancement

   3 Open         [TCHECK-15] gen/for macro for alternate combinator syntax
   2 Open         [TCHECK-7] Add nested property support
   2 Open         [TCHECK-2] pos-int is confusingly named
   1 Open         [TCHECK-31] Doc improvements: how to separate "size" from "range"
   1 Open         [TCHECK-8] Bound tests and shrinks in time
   0 Open         [TCHECK-4] Handle sigint
   0 Open         [TCHECK-9] Properly document how :max-size works 
   0 Open         [TCHECK-14] re-organize README and doc/
   0 Open         [TCHECK-19] Permit a data-structure containing generators to be used as a generator
   0 Open         [TCHECK-21] Rerunning a particular failure is difficult.
   0 Open         [TCHECK-38] Generators for functions?
   0 Open         [TCHECK-41] Add helpers for deprecating generators
   0 Open         [TCHECK-44] for-all should support nesting
   0 Open         [TCHECK-48] Add sublist generator
   0 Open         [TCHECK-53] property creating function similar to map as alternative to for-all*
   0 Open         [TCHECK-58] Alternate clojure.test integration
   0 Open         [TCHECK-60] string from regular expression generator
   0 Open         [TCHECK-70] Redesign gen/choose
   0 Open         [TCHECK-71] Exponential generator
   0 Open         [TCHECK-72] Poisson generator
   0 Open         [TCHECK-84] Add gen/uniform-double
   0 Open         [TCHECK-85] prop/for-all should let later bindings refer to earlier bindings
   0 Open         [TCHECK-87] New stats feature: Adds ability to assign labels to test cases to report the test case distribution when running a test
   0 Open         [TCHECK-95] quick-check should report how long it ran
   0 Open         [TCHECK-96] quick-check should accept an arg for maximum shrinking time
   0 Open         [TCHECK-97] Support Unicode chararacters for char based generators
   0 Open         [TCHECK-99] Create a generator that will limit the size of a generated sequence
   0 Open         [TCHECK-101] Add a prop/for-all alternative to c.t.c.clojure-test that uses clojure.test/is &c
   0 Open         [TCHECK-102] Provide a mechanism for getting output from a test run after interrupting it.
   0 Open         [TCHECK-105] Support for bootstrapped / self-host ClojureScript


Project TCLI tickets

Project TEMJVM tickets
========================================
Defect

   0 Open         [TEMJVM-11] Stack error in recur

========================================
Enhancement

   0 Open         [TEMJVM-5] Optimize constant metadata emission
   0 Open         [TEMJVM-10] Fix line number info
   0 Open         [TEMJVM-12] Improve test coverage
   0 Open         [TEMJVM-13] Modularize -emit method
   0 Open         [TEMJVM-14] Emit unchecked locals

========================================
Task

   0 Open         [TEMJVM-9] Change fn name munging scheme to match the one introduced with CLJ-1330


Project TGEN tickets
========================================
Defect

   0 Open         [TGEN-5] Defspec leaks :tag from args into generated code

========================================
Enhancement

   0 Open         [TGEN-4] Typo in defspec docstring


Project TLOG tickets
========================================
Defect

   0 Open         [TLOG-15] Generated logging code uses eval to get logger namespace

========================================
Enhancement

   0 Open         [TLOG-14] Logging backend (factory) for Android


Project TMACRO tickets
========================================
Defect

   0 Open         [TMACRO-3] Handling of namespaced symbols
   0 Open         [TMACRO-4] README.md still says 0.1.2 is latest stable release
   0 Open         [TMACRO-5] Misplaced doc string for function protected?
   0 Open         [TMACRO-6] with-symbol-macros fails to preserve set sortedness
   0 Open         [TMACRO-7] Extra paren in expansion
   0 Open         [TMACRO-8] System Performance

========================================
Enhancement

   0 Open         [TMACRO-1] Preserve metadata for (at least) unexpanded forms


Project TNS tickets
========================================
Defect

   1 Open         [TNS-6] Attempt to reload deleted file
   1 Open         [TNS-7] Stack overflow on refresh after circular dependency detected
   0 Open         [TNS-24] Broken tracker after mis-named namespace
   0 Open         [TNS-42] scan-dirs / scan-all can return incorrect dependencies when both clj and cljc files define same namespace
   0 Open         [TNS-43] ns-decl? treats (ns) as valid

========================================
Enhancement

   0 Open         [TNS-37] c.t.n.move: does not support to move .cljc files
   0 Open         [TNS-39] Single classpath argument for c.t.n.move
   0 Open         [TNS-41] Provide warning when AOT enabled for a project


Project TRDR tickets
========================================
Enhancement

   0 Open         [TRDR-25] Source information when reading EDN

========================================
Task

   0 Open         [TRDR-29] Simple benchmarking bash script to test before & after applying a batch


Project TTRACE tickets
========================================
Enhancement

   0 Open         [TTRACE-9] Use aprint when displaying value
   0 Open         [TTRACE-10] Add throttling/rate-limiting
   0 Open         [TTRACE-13] Implicitly quote the name space in the trace-ns macro


Project UNIFY tickets
========================================
Defect

   0 Open         [UNIFY-7] Dead code in occurs? function
   0 Open         [UNIFY-8] Handle sets correctly

========================================
Task

   0 Open         [UNIFY-3] Enhance documentation
   0 Open         [UNIFY-6] Create tests for k&v map unification
