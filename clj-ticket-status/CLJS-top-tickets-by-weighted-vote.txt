Top CLJS tickets by weighted vote

Date: August 17, 2013
 
Open CLJS tickets with at least one vote, sorted in descending order of
their "weighted vote".

Suppose someone has currently voted on N open tickets.  Then their
vote counts as 1/N for each of those tickets.  Thus voting on all
tickets has the same relative effect on their ranking as voting on no
tickets.  You must be selective to change the rankings.

Each person gets 1 weighted vote to divide up as they wish for each
project, e.g. 1 for CLJ, 1 for CLJS, 1 for MATCH, etc.

Each ticket is listed with:

<weighted vote>  <vote count>  <Approval> <Fix Version> <State>   [<project>-<n>] <summary line>
             voter #1 (weight that voter #1 contributes)
             voter #2 (weight that voter #2 contributes)
             ...

where Approval is one of "--" (blank), Vetted, Screened, Incomplete,
etc. and State is one of the states in the JIRA flow diagram at

    http://dev.clojure.org/display/community/JIRA+workflow

========================================
Defect

    1.00   1 --       --          Open         [CLJS-109] Compiler errors/warnings should be displayed when cljs namespace 'package' names start with an unacceptable javascript symbol.
             Jozef Wagner (1)
    0.50   1 --       --          Open         [CLJS-344] clojure.reflect is asynchronous (should use CrossPageChannel)
             Frank Siebenlist (1/2)
    0.50   1 --       --          Open         [CLJS-569] :refer doesn't verify the referred vars
             Ambrose Bonnaire-Sergeant (1/2)

========================================
Enhancement

    8.00   9 Vetted   --          Vetted       [CLJS-27] Conditional compilation (or reading)
             Alex Baranosky (1)
             David Nolen (1)
             David Santiago (1)
             Max Penet (1)
             Michał Marczyk (1)
             Roman Scherer (1)
             Thomas Heller (1)
             Ambrose Bonnaire-Sergeant (1/2)
             Marko Kocić (1/2)
    3.00   4 --       --          Open         [CLJS-37] A way to create js objects and arrays from cljs maps and vectors, without copying if possible.
             Marcus Cavanaugh (1)
             Nicolas Buduroi (1)
             Frank Siebenlist (1/2)
             Marko Kocić (1/2)
    2.50   3 --       --          Open         [CLJS-77] Add support for Closure defines
             Rafal Babinicz (1)
             Sergei Lebedev (1)
             Tyler Tallman (1/2)
    2.50   3 --       --          Open         [CLJS-463] Google Closure Class interop form (genclass)
             Bodil Stokke (1)
             John Chijioke (1)
             Tyler Tallman (1/2)
    1.00   1 --       --          Open         [CLJS-145] Cannot create more than one browser evaluation environment
             Hubert Iwaniuk (1)
