Top CLJS tickets by weighted vote

Date: March 29, 2015
 
Open CLJS tickets with at least one vote, sorted in descending order of
their "weighted vote".  At the end of the CLJ and CLJS lists are
tickets with no votes, but they have been at least Triaged.  For the
CLJ project, Triaged means that at least one Clojure screener thinks
the ticket describes a real issue.  At the end of other project ticket
lists are all open tickets, whether they have votes or not.

Suppose someone has currently voted on N open tickets.  Then their
vote counts as 1/N for each of those tickets.  Thus voting on all
tickets has the same relative effect on their ranking as voting on no
tickets.  You must be selective to change the rankings.

Each person gets 1 weighted vote to divide up as they wish for each
project, e.g. 1 for CLJ, 1 for CLJS, 1 for MATCH, etc.

Note: Ticket wranglers sometimes look at unweighted vote counts on
tickets, too, when deciding which to act upon, so feel free to vote on
many tickets if you care about them.

Each ticket is listed with:

<weighted vote>  <vote count>  <State>   [<project>-<n>] <summary line>
             voter #1 (weight that voter #1 contributes)
             voter #2 (weight that voter #2 contributes)
             ...

where State is one of the states in the JIRA flow diagram at

    http://dev.clojure.org/display/community/JIRA+workflow

Note that a state of "Backlog" is shown below if the next release is
N, and the ticket is marked for fix in release N+1 (e.g. the next
release is 1.7, but the ticket is marked for fix in release 1.8).

========================================
Defect

    2.00   2 Open         [CLJS-677] cljs.reader doesn't support keywords starting with a digit
             Francis Avila (1)
             Mike Longworth (1)
    1.25   2 Open         [CLJS-957] Parallel compilation
             Dusan Maliarik (1)
             Mike Fikes (1/4)
    1.00   1 Bad: Unkn Fi [CLJS-871] .-default property access returns nil
             Timothy Pratley (1)
    1.00   1 Open         [CLJS-890] Incorrect behaviour of (str obj) when obj has valueOf method
             Kevin Neaton (1)
    1.00   1 Open         [CLJS-911] Cljs's clojure.string.replace replacement fn takes different args to Clj's clojure.string.replace
             Joseph Smith (1)
    0.50   1 Bad: Unkn Fi [CLJS-968] Metadata on function literal inside of a let produces invalid Javascript
             David Nolen (1/2)
    0.25   1 Open         [CLJS-1092] Basic CommonJS processing
             Mike Fikes (1/4)
    0.00   0 Bad: Unkn Fi [CLJS-349] cljs.compiler: No defmethod for emit-constant clojure.lang.LazySeq
    0.00   0 Bad: Unkn Fi [CLJS-375] loop doesn't seem to preserve tag information as evidenced by extra cljs.core.truth_ calls
    0.00   0 Bad: Unkn Fi [CLJS-428] Using */ inside of a docstring causes compiler to produce invalid JavaScript
    0.00   0 Bad: Unkn Fi [CLJS-434] ClojureScript compiler prepends "self__" to defmulti forms when metadata in form of ^:field.
    0.00   0 Bad: Unkn Fi [CLJS-485] clojure.string/replace ignores regex flags
    0.00   0 Bad: Unkn Fi [CLJS-620] Warnings are generated when using a macro in argument position
    0.00   0 Bad: Unkn Fi [CLJS-688] Unhelpful error message when compiling with blank .cljs file
    0.00   0 Bad: Unkn Fi [CLJS-712] resolve-var for symbol with dot still wrong
    0.00   0 Bad: Unkn Fi [CLJS-719] this-as behaves incorrectly in "scoping function"
    0.00   0 Bad: Unkn Fi [CLJS-742] Compilation with :output-file option set fails
    0.00   0 Bad: Unkn Fi [CLJS-744] ISequential types should implement JS indexOf, lastIndexOf
    0.00   0 Bad: Unkn Fi [CLJS-794] RegExp flags are being dropped by `string/replace`
    0.00   0 Bad: Unkn Fi [CLJS-818] Externs don't get loaded when running under immutant as cljs.js-deps/find-js-classpath fails
    0.00   0 Bad: Unkn Fi [CLJS-868] no arity warnings on recursive calls
    0.00   0 Bad: Unkn Fi [CLJS-1070] top-level boolean inference does not work
    0.00   0 Bad: Unkn Fi [CLJS-1113] Compile in dependency order
    0.00   0 Bad: Unkn Fi [CLJS-1133] REPL require results in warnings to be emitted twice
    0.00   0 Bad: Unkn Fi [CLJS-1136] Initial require fails to fully load added symbols
    0.00   0 Bad: Unkn Fi [CLJS-1139] Repeated applications of `ns` form at the REPL are not additive
    0.00   0 Bad: Unkn Fi [CLJS-1142] ClojureScript stream socket REPL
    0.00   0 Bad: Unkn Fi [CLJS-1145] numeric type inference should accept JVM primitive numeric type hints
    0.00   0 Bad: Unkn Fi [CLJS-1159] compiled files with warnings that otherwise don't need recompilation will not emit warnings on the next compile
    0.00   0 Bad: Unkn Fi [CLJS-1168] REPL fails to find .js files in :libs 
    0.00   0 Bad: Unkn Fi [CLJS-1173] standard way to identify types originating from ClojureScript

========================================
Enhancement

   11.50  12 Vetted       [CLJS-27] Conditional compilation (or reading)
             Alex Baranosky (1)
             Ambrose Bonnaire-Sergeant (1)
             David Santiago (1)
             Howard Lewis Ship (1)
             Marko Kocić (1)
             Max Penet (1)
             Michał Marczyk (1)
             Peter Taoussanis (1)
             Roman Scherer (1)
             Sanel Zukan (1)
             Thomas Heller (1)
             David Nolen (1/2)
    1.25   2 Open         [CLJS-555] CLONE - Implement ratios
             Marcus H (1)
             Mike Fikes (1/4)
    1.00   1 Open         [CLJS-145] Cannot create more than one browser evaluation environment
             Hubert Iwaniuk (1)
    1.00   1 Open         [CLJS-324] cljs.core/format
             Yehonathan Sharvit (1)
    1.00   1 Open         [CLJS-335] user defined tagged literals in CLJS
             Jan-Paul Bultmann (1)
    1.00   1 Open         [CLJS-1009] Allow deps.cljs to declare a foreign lib as remote
             Ruslan Prokopchuk (1)
    0.00   0 Bad: Unkn Fi [CLJS-773] Use unchecked-*-int functions for real 32-bit math
    0.00   0 Bad: Unkn Fi [CLJS-836] Replace seq-based iterators with direct iterators for all non-seq collections that use SeqIterator
    0.00   0 Bad: Unkn Fi [CLJS-895] Hello-js sample is broken when following README instructions
    0.00   0 Bad: Unkn Fi [CLJS-994] print a warning when :externs file paths can't be found.
    0.00   0 Bad: Unkn Fi [CLJS-1061] Enhanced control over printing configuration
    0.00   0 Bad: Unkn Fi [CLJS-1124] Have cljs.repl.browser/repl-env serve more static file types
    0.00   0 Bad: Unkn Fi [CLJS-1125] Simple corrupted compiled file detection
    0.00   0 Bad: Unkn Fi [CLJS-1127] validate compiled file written to disk
    0.00   0 Bad: Unkn Fi [CLJS-1141] memoization of js-dependency-index and get-upstream-deps needs knobs
    0.00   0 Bad: Unkn Fi [CLJS-1147] reconnect logic for browser REPLs
    0.00   0 Bad: Unkn Fi [CLJS-1174] Simple warning if a namespace with dashes not found but a file path with dashes exists

========================================
Task

    1.00   1 Bad: Unkn Fi [CLJS-710] port clojure.pprint
             Matthew Molloy (1)
    0.25   1 Open         [CLJS-1044] Investigate Closure CommonJS Support
             Mike Fikes (1/4)
    0.00   0 Bad: Unkn Fi [CLJS-1128] Describe internationalization strategies via Google Closure on the wiki
    0.00   0 Bad: Unkn Fi [CLJS-1129] :modules tutorial for wiki
    0.00   0 Bad: Unkn Fi [CLJS-1134] Lift protocols from cljs.closure into cljs.protocols ns
    0.00   0 Bad: Unkn Fi [CLJS-1135] Present more cljs.foo.api interfaces for stable parts of cljs.analyzer, cljs.compiler, and cljs.closure
    0.00   0 Bad: Unkn Fi [CLJS-1138] Add page to Wiki "Slow dev builds"
