Top CLJS tickets by weighted vote

Date: March 13, 2015
 
Open CLJS tickets with at least one vote, sorted in descending order of
their "weighted vote".  At the end of the CLJ and CLJS lists are
tickets with no votes, but they have been at least Triaged.  For the
CLJ project, Triaged means that at least one Clojure screener thinks
the ticket describes a real issue.  At the end of other project ticket
lists are all open tickets, whether they have votes or not.

Suppose someone has currently voted on N open tickets.  Then their
vote counts as 1/N for each of those tickets.  Thus voting on all
tickets has the same relative effect on their ranking as voting on no
tickets.  You must be selective to change the rankings.

Each person gets 1 weighted vote to divide up as they wish for each
project, e.g. 1 for CLJ, 1 for CLJS, 1 for MATCH, etc.

Note: Ticket wranglers sometimes look at unweighted vote counts on
tickets, too, when deciding which to act upon, so feel free to vote on
many tickets if you care about them.

Each ticket is listed with:

<weighted vote>  <vote count>  <State>   [<project>-<n>] <summary line>
             voter #1 (weight that voter #1 contributes)
             voter #2 (weight that voter #2 contributes)
             ...

where State is one of the states in the JIRA flow diagram at

    http://dev.clojure.org/display/community/JIRA+workflow

Note that a state of "Backlog" is shown below if the next release is
N, and the ticket is marked for fix in release N+1 (e.g. the next
release is 1.7, but the ticket is marked for fix in release 1.8).

========================================
Defect

   2 Open         [CLJS-677] cljs.reader doesn't support keywords starting with a digit
   1 Bad: Unkn Fi [CLJS-109] Compiler errors/warnings should be displayed when cljs namespace 'package' names start with an unacceptable javascript symbol.
   1 Open         [CLJS-871] .-default property access returns nil
   1 Open         [CLJS-890] Incorrect behaviour of (str obj) when obj has valueOf method
   1 Open         [CLJS-911] Cljs's clojure.string.replace replacement fn takes different args to Clj's clojure.string.replace
   1 Open         [CLJS-957] Parallel compilation
   1 Open         [CLJS-968] Metadata on function literal inside of a let produces invalid Javascript
   1 Open         [CLJS-1092] Basic CommonJS processing
   0 Bad: Unkn Fi [CLJS-667] validate extend-type and extend-protocol shape
   0 Bad: Unkn Fi [CLJS-799] Having a namespace end with ".cljs" produces wrong source map
   0 Bad: Unkn Fi [CLJS-806] support ^:const
   0 Bad: Unkn Fi [CLJS-813] Warn about reserved JS keyword usage in namespace names
   0 Bad: Unkn Fi [CLJS-867] specify with Object methods requires multi-arity style definition
   0 Bad: Unkn Fi [CLJS-876] merged sourcemap doesn't account for output-wrapper
   0 Bad: Unkn Fi [CLJS-889] 2 characters not supported in re-pattern: \u2028 \u2029
   0 Bad: Unkn Fi [CLJS-891] Defs in "parent" namespaces clash with "child" namespaces with the same name?
   0 Bad: Unkn Fi [CLJS-904] timeout in start-evaluator is too short
   0 Bad: Unkn Fi [CLJS-977] Subvec missing IKVReduce implementation
   0 Bad: Unkn Fi [CLJS-1043] top-level locals issues
   0 Bad: Unkn Fi [CLJS-1113] Compile in dependency order
   0 Bad: Unkn Fi [CLJS-1116] Long compile times even under :none
   0 Bad: Unkn Fi [CLJS-1118] cljs.repl/doc support for protocols

========================================
Enhancement

  12 Vetted       [CLJS-27] Conditional compilation (or reading)
   3 Open         [CLJS-463] Google Closure Class interop form (genclass)
   1 Open         [CLJS-145] Cannot create more than one browser evaluation environment
   1 Open         [CLJS-324] cljs.core/format
   1 Open         [CLJS-335] user defined tagged literals in CLJS
   1 Open         [CLJS-555] CLONE - Implement ratios
   1 Open         [CLJS-1009] Allow deps.cljs to declare a foreign lib as remote
   0 Bad: Unkn Fi [CLJS-1061] Enhanced control over printing configuration
   0 Bad: Unkn Fi [CLJS-1062] Incorrect deftype/defrecord definition leads to complex error messages
   0 Bad: Unkn Fi [CLJS-1085] Allow to pass test environment to cljs.test/run-all-tests

========================================
Task

   1 Open         [CLJS-710] port clojure.pprint
   1 Open         [CLJS-1044] Investigate Closure CommonJS Support
