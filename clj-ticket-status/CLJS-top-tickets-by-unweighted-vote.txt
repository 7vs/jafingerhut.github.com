Top CLJS tickets by weighted vote

Date: January 24, 2019
 
Open CLJS tickets with at least one vote, sorted in descending order of
their "weighted vote".  At the end of the CLJ and CLJS lists are
tickets with no votes, but they have been at least Triaged.  For the
CLJ project, Triaged means that at least one Clojure screener thinks
the ticket describes a real issue.  At the end of other project ticket
lists are all open tickets, whether they have votes or not.

Suppose someone has currently voted on N open tickets.  Then their
vote counts as (1+log(N,2))/N for each of those tickets, where
log(N,2) is the base 2 logarithm of N (formerly it was 1/N).  This new
formula gives those who vote on many tickets more 'points' to divide
up (suggested by Alex Miller).  Still, it helps to be selective to
change the rankings.

This calculation is done independently for each project, e.g. for CLJ,
for CLJS, for MATCH, etc.

Note: Ticket wranglers sometimes look at unweighted vote counts on
tickets, too, when deciding which to act upon, so feel free to vote on
many tickets if you care about them.

Each ticket is listed with:

<weighted vote>  <vote count>  <State>   [<project>-<n>] <summary line>
             voter #1 (weight that voter #1 contributes)
             voter #2 (weight that voter #2 contributes)
             ...

where State is one of the states in the JIRA flow diagram at

    https://clojure.org/community/workflow#_workflow

Note that a state of "Backlog" is shown below if the next release is
N, and the ticket is marked for fix in release N+1 (e.g. the next
release is 1.7, but the ticket is marked for fix in release 1.8).

========================================
Defect

  17 Open         [CLJS-1701] cljs.spec impact on :advanced builds
   5 Open         [CLJS-677] cljs.reader doesn't support keywords starting with a digit
   5 Open         [CLJS-2738] Can't use aws-amplify or aws-sdk with npm-deps
   5 Bad: Unkn Fi [CLJS-868] no arity warnings on recursive calls
   5 Open         [CLJS-2757] Failure to load is-plain-object transitive npm dep
   4 Open         [CLJS-1926] Changes to namespace metadata are not properly transferred to *ns* dynamic var
   4 Open         [CLJS-1864] timestamped source maps broken with Node
   4 Bad: Unkn Fi [CLJS-712] resolve-var for symbol with dot still wrong
   3 Open         [CLJS-2440] Re-running watch on CLJS source using native modules results in JS error
   3 Bad: Unkn Fi [CLJS-1753] cljs.pprint does not print default tagged literals/elements
   3 Open         [CLJS-1965] letfn collisions across namespaces
   3 Bad: Unkn Fi [CLJS-871] .-default property access returns nil
   3 Open         [CLJS-2433] HTTP server in cljs.browser.repl doesn't serve files with extensions other than specified in ext->mime-type
   3 Open         [CLJS-2454] Inconsistent macro require behaviour
   3 Open         [CLJS-1913] Investigate slow reading / compilation of CLJC files
   2 Open         [CLJS-2720] Cannot import node_modules into ES6 classpath lib
   2 Bad: Unkn Fi [CLJS-968] Metadata on function literal inside of a let produces invalid Javascript
   2 Bad: Unkn Fi [CLJS-2002] Don't throw when no *print-fn* is set
   2 Open         [CLJS-890] Incorrect behaviour of (str obj) when obj has valueOf method
   2 Open         [CLJS-1558] Code allowed to re-define referred var
   2 Open         [CLJS-1806] build api fails to generate inline code for :target :nodejs
   2 Vetted       [CLJS-2633] Regression on scoped npm-modules 
   2 Open         [CLJS-2461] Minor shadowing intricacies
   2 Open         [CLJS-2709] JS Module can't add new Cljs namespaces to build
   1 Open         [CLJS-776] re-matches is incorrect
   1 Open         [CLJS-1444] Node.js shim requires `node` invocation to be in the same directory as shim script
   1 Open         [CLJS-1559] Closure :libs ignored
   1 Open         [CLJS-1889] A lone ampersand `&` can be used to name a var, but throws when invoked. `(&)`
   1 Open         [CLJS-1899] Local bindings conflict with global JS namespace
   1 Open         [CLJS-2155] building fileUrl on windows in repl.cljc results with java.net.UnknownHostException
   1 Open         [CLJS-2236] Defrecord does not escape field names matching JS keywords (with/in/...)
   1 Open         [CLJS-2268] clojure.string/escape in ClojureScript (unlike in Clojure) assumes cmap is a map
   1 Open         [CLJS-2292] Var being replaced warnings with :refer-clojure :rename
   1 Vetted       [CLJS-2351] Setting :arglists metadata when vararg is present
   1 Open         [CLJS-2399] :foreign-libs with module conversion does not works properly (possible regression)
   1 Open         [CLJS-2408] js->clj does not work on objects with null prototype
   1 Open         [CLJS-2446] with-meta doesn't work for variable arguments functions
   1 Open         [CLJS-2809] Using `:foreign-libs` along with `:npm-deps` fails depending on order of requires
   1 Bad: Unkn Fi [CLJS-719] this-as behaves incorrectly in "scoping function"
   1 Open         [CLJS-1924] The compiler cannot infer the target type of "(. RecordName -prototype)" expressions
   1 Open         [CLJS-2382] circular dependency in node_modules prevents compilation
   1 Bad: Unkn Ap [CLJS-2694] Remove direct references to Closure DiagnosticsGroups
   1 Open         [CLJS-2719] Should not compile ES6 or CommonJS libs when under :nodejs target
   1 Open         [CLJS-1587] Duplicate keys via quoting
   1 Open         [CLJS-1593] Self-host: Munged minus macro
   1 Bad: Match n [CLJS-2765] Git caching creates cljs_deps.js file with relative paths to cache directory on the first try
   1 Open         [CLJS-2402] Duplicate source files passed to Closure Compiler causes ModuleLoader#resolvePaths to throw "Duplicate module path after resolving"
   1 Bad: Unkn Fi [CLJS-1159] compiled files with warnings that otherwise don't need recompilation will not emit warnings on the next compile
   1 Open         [CLJS-2070] Dotted interop forms can leak invalid JS into output
   1 Bad: Unkn Fi [CLJS-2419] Self-host: `find-ns-obj` still broken for namespaces with 'a' as the first segment
   1 Open         [CLJS-2666] Node modules not usable from REPL without output-dir
   1 Open         [CLJS-1104] Compute SHA for ClojureScript compiled file
   1 Open         [CLJS-1266] Node: Rename .cljs to .cljc -> old filenames in stacktrace
   1 Open         [CLJS-1832] destructuring with #js at :or breaks the compilation when transit is part of the project
   1 Open         [CLJS-1843] EDN analysis cache may write unusable data
   1 Open         [CLJS-1863] :reload/:reload-all issue with .cljc runtime/macro nses
   1 Bad: Unkn Fi [CLJS-1896] Externs file validation
   1 Open         [CLJS-1676] Unused local in ObjMap / IKVReduce
   1 Open         [CLJS-2543] IndexingPushbackReader error when compiling :reload-all with cljs.spec.alpha
   1 Bad: Unkn Fi [CLJS-2138] Remove redundant checks in ChunkedSeq.-rest and ChunkedSeq.-next 
   1 Open         [CLJS-2774] cljs.main: load file fails if NPM deps involved
   0 Bad: Unkn Fi [CLJS-349] cljs.compiler: No defmethod for emit-constant clojure.lang.LazySeq
   0 Bad: Unkn Fi [CLJS-375] loop doesn't seem to preserve tag information as evidenced by extra cljs.core.truth_ calls
   0 Bad: Unkn Fi [CLJS-434] ClojureScript compiler prepends "self__" to defmulti forms when metadata in form of ^:field.
   0 Bad: Unkn Fi [CLJS-1070] top-level boolean inference does not work
   0 Bad: Unkn Fi [CLJS-1133] REPL require results in warnings to be emitted twice
   0 Bad: Unkn Fi [CLJS-1139] Repeated applications of `ns` form at the REPL are not additive
   0 Bad: Unkn Fi [CLJS-1222] Sequence of a stateful transducer is producing the wrong answer
   0 Bad: Unkn Fi [CLJS-1237] ns-unmap doesn't work on refers from cljs.core
   0 Bad: Unkn Fi [CLJS-1271] Missing warning when assigning namespaces via def
   0 Bad: Unkn Fi [CLJS-1286] REPL environment should be able to provide advice if source mapping fails
   0 Bad: Unkn Fi [CLJS-1300] REPLs do no write out updated deps.js when compiling files
   0 Bad: Unkn Fi [CLJS-1315] Warning on Google Closure enum property access with /
   0 Bad: Unkn Fi [CLJS-1485] Error when requiring `goog` namespace in a ns declaration 
   0 Bad: Unkn Fi [CLJS-1544] cljs.test REPL reload support
   0 Bad: Unkn Fi [CLJS-1678] variadic defn can be called for missing fixed arities, overlapping arity
   0 Bad: Match n [CLJS-2168] Properly document browser-env options
   0 Vetted       [CLJS-2343] Double require guard bypassed if :refer-macros
   0 Bad: Unkn Ap [CLJS-2761] Warn if fn has more than 20 fixed arguments
   0 Vetted       [CLJS-2762] Insufficient hooks to build tooling around test termination
   0 Bad: Match n [CLJS-2770] Problem with namespaces starting with com in Rhino
   0 Triaged      [CLJS-3022] cljs.repl is not loaded in node socket io-prepl, which is required for formatting errors (err->str)

========================================
Enhancement

  15 Open         [CLJS-2376] Add support for ES6 default imports/exports
  12 Open         [CLJS-1628] Make instances of js/Symbol printable
  10 Bad: Unkn Fi [CLJS-1461] Convert analyzer to conform to tools.analyzer's spec
  10 Open         [CLJS-1908] Improve error messages by using pr-str instead of str when printing objects
   9 Open         [CLJS-2341] Speed up js->clj on objs using forEach and transient volatile
   6 Open         [CLJS-2467] Small PVs are never chunked
   5 Open         [CLJS-555] CLONE - Implement ratios
   5 Open         [CLJS-2466] Faster reduce for lazy-seqs
   5 Open         [CLJS-1902] Add support for compiler option :inline-source-maps
   5 Open         [CLJS-1712] Make PersistentHashSet implement IReduce
   4 Open         [CLJS-1410] Support source maps in deps.cljs
   4 Open         [CLJS-2885] DCE-friendly cljs.pprint
   4 Bad: Unkn Fi [CLJS-1047] externs checking for js/foo
   4 Open         [CLJS-2472] ES6 Iterators should use IIterable if possible
   4 Bad: Unkn Ap [CLJS-2120] Optimize keyword function
   4 Open         [CLJS-2424] Improve compiler munge performance Nr 2
   4 Open         [CLJS-2748] Enable *warn-on-reflection*
   3 Open         [CLJS-1153] Typed Array backed PersistentVector based on clojure.core/Vec
   3 Open         [CLJS-1755] Support sourcesContent in source maps
   3 Open         [CLJS-1009] Allow deps.cljs to declare a foreign lib as remote
   3 Open         [CLJS-2132] Optimize transient vector creation
   2 Open         [CLJS-2051] Add end-line and end-column to analyzer AST
   2 Open         [CLJS-1474] Error if reserved symbol is defined
   2 Open         [CLJS-1601] Optimize cljs.core dump 
   2 Open         [CLJS-2895] Cull source maps
   2 Open         [CLJS-1866] RangedIterator performance tweaks
   2 Open         [CLJS-2468] Implement reduce for ChunkedCons
   1 Open         [CLJS-1990] Clojurescript programs targeting nodejs should support global installation
   1 Open         [CLJS-2301] Avoid use of deprecated goog.string/isEmptySafe in clojure.string/blank?
   1 Open         [CLJS-2409] Eliminate cljs.core/divide
   1 Open         [CLJS-2527] Add iterator-seq to cljs.core
   1 Open         [CLJS-2850] Support webpack node lib replacements
   1 Bad: Unkn Fi [CLJS-1328] Support defrecord reader tags
   1 Open         [CLJS-1631] The str function should handle JavaScript symbols
   1 Bad: Match > [CLJS-2331] Extend :global-exports to auto-alias and rewrite occurrences of declared globals
   1 Bad: Unkn Fi [CLJS-994] print a warning when :externs file paths can't be found.
   1 Open         [CLJS-1726] demunge is too agreesive and incorrect in some cases
   1 Open         [CLJS-3016] Enable cljs.core.specs.alpha
   1 Open         [CLJS-2826] Add arglist annotations in cljs.core
   1 Open         [CLJS-650] Optimize all protocols
   1 Bad: Unkn Fi [CLJS-1127] validate compiled file written to disk
   1 Vetted       [CLJS-2459] Compiler should emit warning about namespace and/or non-existent var
   1 Bad: Unkn Fi [CLJS-1141] memoization of js-dependency-index and get-upstream-deps needs knobs
   1 Open         [CLJS-1776] Add fixed arities for mapcat
   1 Open         [CLJS-1881] Improve cljs.core/distinct perf by using transient map
   1 Open         [CLJS-1975] Perf: Compare f with nil in Delay impl
   1 Open         [CLJS-2045] sort-by: Avoid re-creating comparator
   1 Open         [CLJS-2342] Speed up printing of js object by using forEach and regex optimizations
   1 Bad: Unkn Fi [CLJS-2344] de-dupe externs
   1 Open         [CLJS-2346] Make (:require foo/bar) work for JS modules
   1 Open         [CLJS-2383] Improve perf of select-keys by using keyword-identical?
   1 Open         [CLJS-2471] ChunkedSeq should implemented ICounted
   1 Open         [CLJS-2786] implement cljs.core/extend, same as clojure.core/extend
   1 Open         [CLJS-2868] Add ^string hints
   0 Bad: Unkn Fi [CLJS-773] Use unchecked-*-int functions for real 32-bit math
   0 Bad: Unkn Fi [CLJS-1125] Simple corrupted compiled file detection
   0 Bad: Unkn Fi [CLJS-1147] reconnect logic for browser REPLs
   0 Bad: Unkn Fi [CLJS-1174] Simple warning if a namespace with dashes not found but a file path with dashes exists
   0 Bad: Unkn Fi [CLJS-1207] Emit a warning if multiple resources found for a ClojureScript namespace
   0 Bad: Unkn Fi [CLJS-1373] Generalize CLJS-1324, check invokes of all IFn implementors
   0 Bad: Unkn Fi [CLJS-1402] Source Mapping Closure Error Logger
   0 Bad: Unkn Fi [CLJS-1412] Add JSDoc type information to individual IFn methods
   0 Bad: Unkn Fi [CLJS-1415] Handling JSDoc param name [x] optional syntax
   0 Bad: Unkn Fi [CLJS-1419] enhance numeric inference, if + number? test on local var should tag local var in the successful branch
   0 Bad: Unkn Fi [CLJS-2127] Add invoke* helper macro
   0 Bad: Unkn Fi [CLJS-2156] Add postamble, or some other generic way to append code to a file
   0 Vetted       [CLJS-2209] case docstring should explain constants may be evaluated (cljs only)
   0 Bad: Unkn Fi [CLJS-2270] Support AOT compilation of macro namespaces (bootstrap)

========================================
Task

   4 Open         [CLJS-901] Protocolize compiler access to the file system
   1 Open         [CLJS-1690] spec the ClojureScript AST
   0 Bad: Unkn Fi [CLJS-1134] Lift protocols from cljs.closure into cljs.protocols ns
   0 Bad: Unkn Fi [CLJS-1446] autodoc + gh-pages for cljs.*.api namespaces
   0 Bad: Unkn Fi [CLJS-1447] IFn implementors have a broken call implementation, all args after 20th argument should be collected into a seq
   0 Bad: Unkn Fi [CLJS-1501] Add :parallel-build support to REPLs
