Tickets needing work for CLJ project
Date: November 22, 2013

If you are a Clojure contributor, the tickets below could use some
work.  Some are easy, some are not.  If you've never added a patch
before, or want a refresher on the mechanics, see (Note 1) near the
bottom.

Keep reading below for a list of tickets that:
    (a) have patches, but they need updating, or
    (b) don't have patches, but are vetted, triaged, or are marked for
        Release 1.6 of Clojure

The first letter on each patch summary line indicates the Approval of
the ticket: "T" for Triaged, "V" for Vetted, etc.  After the ticket id
(CLJ-<number>) is the state of the ticket.  See the JIRA workflow
diagram for details:
    http://dev.clojure.org/display/community/JIRA+workflow

For a list of all tickets that don't have any patches, see (Note 2)
near the bottom.

Another way to help is to try out, read, review, comment on, and vote
for existing patches.  See the separate "List of prescreened patches"
for those.

----------------------------------------------------------------------
Blocking bugs
----------------------------------------------------------------------
One or more contributors consider these bugs to be blocking,
i.e. significant enough to warrant fixing before another release is
made, by saying so on clojure-dev.  If someone from Clojure/core wants
to veto that status, let me know and I'll remove it from this part of
the report.

   <none at this time>

----------------------------------------------------------------------
Tickets with prescreened patches, but they may need work, since the
ticket is marked Incomplete (I).
----------------------------------------------------------------------
      Doc string fixes only:

I  CLJ-1190 Incomplete   clj-1190-2.diff

      Better error reporting:

I  CLJ-1130 Incomplete   clj-1130-v2.diff

      Debug/tooling enhancement:

I  CLJ-713  Incomplete   clj-713-2.diff
I  CLJ-1176 Incomplete   0001-CLJ-1176-Bind-read-eval-true-in-clojure.repl-source-.patch

      Clojure language/library bug fixes:

I  CLJ-935  Incomplete   clj935-2.patch
I  CLJ-944  Incomplete   0001-Fix-for-CLJ-944.patch
      See comments for another patch 0002-Fix-for-CLJ-944.patch and
      why it fails some tests, which are fixable.
I  CLJ-1082 Incomplete   clj-1082-patch-v2.diff
I  CLJ-1187 Incomplete   001-CLJ-1187.patch

      Allow more correct-looking Clojure code to work:

I  CLJ-1148 Incomplete   defonce_fixes.patch

      Language/library enhancement:

I  CLJ-865  Incomplete   2013-10-11_CLJ-865_Fix-With-Tests.diff

      Performance enhancement:

I  CLJ-1200 Incomplete   no-getComponentType--v002.patch

----------------------------------------------------------------------
Tickets marked for Clojure Release 1.6 that have no prescreened
patches (see also Note 3 at the bottom):
----------------------------------------------------------------------
I   1 [CLJ-787] transient blows up when passed a vector created by subvec
V   0 [CLJ-1299] Binding conveyance seems to be broken as of 1.6.0-alpha2

----------------------------------------------------------------------
Tickets needing work that have no prescreened patches.  These are all
Triaged (T), Vetted (V), or Incomplete (I).  The number after the
letter is the number of votes, and tickets have been sorted from most
to fewest votes.
----------------------------------------------------------------------
T   5 [CLJ-440] java method calls cannot omit varargs
T   4 [CLJ-1250] Reducer (and folder) instances hold onto the head of seqs
V   3 [CLJ-124] GC Issue 120: Determine mechanism for controlling automatic shutdown of Agents, with a default policy and mechanism for changing that policy as needed
V   3 [CLJ-445] Method/Constructor resolution does not factor in widening conversion of primitive args
V   2 [CLJ-415] smarter assert (prints locals)
      The patch applies cleanly and passes tests, but gives a warning
      because macro local-bindings is same name (and perhaps the same
      author, since the body is almost the same) as a function
      local-bindings in clojure.test.generative.  If the one in
      clojure.test.generative were moved to clojure.core,
      test.generative could use that one.
T   2 [CLJ-1026] Mixed end-of-line endings in the source code
T   2 [CLJ-1152] PermGen leak in multimethods and protocol fns when evaled
T   2 [CLJ-1169] Add filename and line number to defn parameter declaration error
V   1 [CLJ-823] Piping seque into seque can deadlock
T   1 [CLJ-971] Jar within a jar throws a runtime error
V   1 [CLJ-1100] Reader literals cannot contain periods
V   0 [CLJ-5] Unintuitive error response in clojure 1.0
      One of two patches applied and built cleanly on May 4, 2012, but
      not on May 10, 2012.  The second, clj-5-destructure-error.diff,
      failed to apply as of Oct 4, 2012.
V   0 [CLJ-47] GC Issue 43: Dead code in generated bytecode
V   0 [CLJ-69] GC Issue 66: Add "keyset" to Clojure; make .keySet for APersistentMap return IPersistentSet
V   0 [CLJ-84] GC Issue 81: compile gen-class fail when class returns self
V   0 [CLJ-211] Support arbitrary functional destructuring via -> and ->>
V   0 [CLJ-250] debug builds
V   0 [CLJ-274] cannot close over mutable fields (in deftype)
V   0 [CLJ-291] (take-nth 0 coll) redux...
V   0 [CLJ-326] add :as-of option to refer
V   0 [CLJ-346] (pprint-newline :fill) is not handled correctly
V   0 [CLJ-348] reify allows use of qualified name as method parameter
V   0 [CLJ-701] Compiler loses 'loop's return type in some cases
V   0 [CLJ-731] Create macro to variadically unroll a combinator function definition
T   0 [CLJ-976] Implement reader literal and print support for PersistentQueue data structure
V   0 [CLJ-992] `iterate` reducer
V   0 [CLJ-1039] Using 'def with metadata {:type :anything} throws ClassCastException
T   0 [CLJ-1149] Unhelpful error message from :use (and use function) when arguments are malformed

----------------------------------------------------------------------
Tickets not fitting in previous categories, but they have a git format
patch that applies cleanly to latest Clojure master, written by a
contributor, and it does not build and pass tests.
----------------------------------------------------------------------

      Language/library enhancement:

   CLJ-1115 Open         multi-arity-into.diff

----------------------------------------------------------------------
The tickets below are simply ones that seem like they might be a
reasonable amount of effort to create a patch, found by manual browing
through tickets.

   CLJ-129 Add documentation to sorted-set-by detailing how the provided comparator may change set membership semantics
      A thorough job of documenting this would require understanding
      how Clojure functions are made to implement the Comparable
      interface in AFunction.java of the Clojure source code, and the
      restrictions in Java of what makes a "good" implementation of
      the Comparator interface.  Doing that clearly is probably best
      done in a form longer than is acceptable in a doc string for
      sorted-set-by or sorted-map-by, but perhaps such documentation
      could be put at a link that could be added to the doc string.
      A Clojure Google group thread at least partly on this topic:
      https://groups.google.com/forum/?fromgroups=#!topic/clojure/qfWY08hK6mc
   CLJ-750 clojure.lang.MapEntry violates .equals and .hashCode contracts of HashMap.Entry; leads to non-reflexive .equals, etc.

----------------------------------------------------------------------
These patches used to apply cleanly, but due to recent changes in
Clojure master no longer do.  See (Note 1) for some tips on updating
stale patches.

      Debug/tooling enhancement:

   CLJ-849 CLJ-849-line-number-pesudo-variable.diff
      Applied cleanly until Jul 7 2013 when a conflicting change with
      subject "don't presume Integer for LINE and COLUMN, fixes
      round-trip" was made.

      Language enhancement, reducers introduced in Clojure 1.5:

   CLJ-994 none of the patches apply cleanly, but did on Jul 26, 2012

----------------------------------------------------------------------

(Note 1)

Read the documentation under the headings "Coding", "Adding patches",
"Removing patches", and "Updating stale patches" on this page:

    http://dev.clojure.org/display/community/Developing+Patches

(Note 2)

There are usually over 100 tickets matching a JIRA filter called
"Needs a Patch (all)".  To see them, go to this link:

    http://dev.clojure.org/jira/secure/ManageFilters.jspa#filterView=search

In the box labeled Author, type in Andy Fingerhut.  Click on the
choice that pops up and the contents should change to my user account
name, jafingerhut.  Click on the Search button at the bottom.  Then
click on the filter called "Needs a Patch (all)".  You can subscribe
to the filter, after which it should show up in your list of filters
under the Issues menu on this page:

    http://dev.clojure.org/jira/browse/CLJ

Most "Needs a Patch" tickets have no patches attached.  If it does
have a patch, then its Patch attribute needs to be changed.  Read the
documentation on adding patches at the link in (Note 1) above.

Some of the older tickets have links to patches in the old Assembla
ticket system.  If you add an attachment to the JIRA ticket, my
automated patch prescreening code will pick it up the next time I run
it (about once every week or two).

(Note 3)

To see a JIRA filter matching tickets that are marked for Release 1.6,
but are not marked as having a patch, follow the instructions for Note
2, except the filter name is "Needs a patch for Release 1.6"
