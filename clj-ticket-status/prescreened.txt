List of prescreened patches for CLJ project
Date: September 7, 2013

The first letter on each patch summary line indicates the Approval of
the ticket: "T" for Triaged, "V" for Vetted, etc.  After the ticket id
(CLJ-<number>) is the state of the ticket.  See the JIRA workflow
diagram for details:
    http://dev.clojure.org/display/community/JIRA+workflow

Screeners: See Note 3 near the bottom of this message for the command
to use when applying patches.  See Note 4 near the bottom for the
criteria to call a patch "prescreened".

This list of tickets is intended primarily for Clojure screeners.  If
you are a contributor looking for tickets that need more work, look
for the separate "Tickets needing work" list.  Also consider reading
and evaluating the not-yet-screened patches below to help out the
screeners, adding your comments to the tickets in JIRA with what you
learned.  You can also vote on tickets you want to see fixed.

----------------------------------------------------------------------
Blocking bugs
----------------------------------------------------------------------
One or more contributors consider these bugs to be blocking,
i.e. significant enough to warrant fixing before another release is
made, by saying so on clojure-dev.  If someone from Clojure/core wants
to veto that status, let me know and I'll remove it from this part of
the report.

   <none>

----------------------------------------------------------------------
"Oddballs"
----------------------------------------------------------------------
These are suggested changes to clojure.org web pages, not patches to
Clojure.

   <suggested in email> Remove now-obsolete http://clojure.org/streams and any links to it (RH said in 2009 that streams lost to chunked sequences)

----------------------------------------------------------------------
Enhancement ideas for which it might be time to create a ticket
----------------------------------------------------------------------
Is it OK to create a ticket for these now? (see Note 2 near the end)

   <none>

----------------------------------------------------------------------
Prescreened patches *not* marked with Fix Version/s = "Release 1.6"
----------------------------------------------------------------------
      Doc string fixes only:

V  CLJ-1104 Backlog      clj-1104-doc-unsafety-of-concurrent-with-redefs-v1.txt
   CLJ-1117 Open         clj-1117.patch
   CLJ-1240 Open         0001-CLJ-1240-Note-limits-of-clojure.walk-macroexpand-all.patch

      Better error reporting:

T  CLJ-735  Triaged      protocolerr.diff
   CLJ-1030 Open         string-coerce-to-int.diff
   CLJ-1107 Open         clj-1107-throw-on-get-for-unsupported-types-patch-v2.txt
   CLJ-1162 Open         CLJ-1162-p1.patch
   CLJ-1189 Open         CLJ-1189-p1.patch
T  CLJ-1248 Triaged      Include-type-information-in-reflection-warning-messa.patch
   CLJ-1257 Open         clj-1257.diff

      Debug/tooling enhancement:

   CLJ-706  Open         706-fix-deprecation-warnings-on-replicate.diff
      This patch is only to eliminate some use of deprecated symbols.
      706-deprecated-var-warning-patch-v2.txt is the patch that
      implements the warnings when using deprecated symbols, but fails
      tests when applied by itself.  It needs test fixes in other
      706-* patches and then they pass.
   CLJ-713  Open         asm41.patch
      This patch applies cleanly, but fails to compile with
      './antsetup.sh ; ant' due to some extra package dependencies
      added by the patch.  It did compile and test successfully as of
      Mar 14, 2013 using the command 'mvn package'.
   CLJ-840  Open         clj840-2.diff
T  CLJ-1073 Triaged      clj-1073-add-print-interruptibly-patch-v2.txt
   CLJ-1088 Open         0001-Add-support-for-protocol-fns-to-repl-source.-CLJ-1088.patch
   CLJ-1112 Open         0001-Allow-setting-loading-verbosely-by-system-property.patch
   CLJ-1165 Open         0001-Protocol-interface-method-declarations-don-t-allow-f.patch
T  CLJ-1191 Triaged      clj-1191-patch-v1.txt
   CLJ-1209 Open         clj-test-print-ex-data.diff

      Clojure language/library bug fixes:

   CLJ-457  Open         CLJ-457-2.diff
   CLJ-1029 Open         ns-patch.diff
   CLJ-1059 Open         001-clj-1059-make-persistentqueue-implement-list.diff
      or 002-clj-1059-asequential-rebased-to-cached-hasheq.diff
   CLJ-1077 Open         thread-bound.diff
   CLJ-1079 Open         CLJ-1079.diff
   CLJ-1093 Open         0001-CLJ-1093-fix-empty-records-literal-v2.patch
   CLJ-1134 Open         clj-1134-star-directive-in-cl-format.txt
   CLJ-1137 Open         CLJ-1137-eval-metadata-once.diff
V  CLJ-1157 Vetted       20130204_fix_classloader.diff
   CLJ-1180 Open         001-CLJ-1180.patch
   CLJ-1216 Open         0001-Create-a-DoExpr.Parser-class-that-delegates-to-BodyE.patch
   CLJ-1217 Open         0001-Don-t-realize-seq-exprs-in-for-unless-necessary.patch
   CLJ-1225 Open         clj-1225-2.txt
   CLJ-1226 Open         0001-fix-CLJ-1226.patch
   CLJ-1229 Open         clj-1229-count-overflow-patch-v1.txt
   CLJ-1237 Open         CLJ-1237c.patch
   CLJ-1241 Open         0001-fix-CLJ-1241.patch
   CLJ-1246 Open         clj-1246-fix-type-reflect-exception-patch-v1.txt
   CLJ-1253 Open         clj-1253-1.txt
   CLJ-1254 Open         clj-1254-v1.txt

      Language enhancement, reducers:

   CLJ-991  Open         reducer-partition-by4.diff
   CLJ-1045 Open         clj-1045-fold-by-halves-patch-v2.txt
   CLJ-1046 Open         drop-while-reducer.patch
      As of Oct 28 2012, some patches for CLJ-992 and CLJ-993 apply, build,
      and test cleanly if applied after the patches for CLJ-1045 and
      CLJ-1046.
   CLJ-1047 Open         001-simplify-fj-importing.patch
   CLJ-1113 Open         reductions-reducer.diff
   CLJ-1185 Open         CLJ-1181-v001.patch
   CLJ-1197 Open         foldable-seq.diff

      Allow more correct-looking Clojure code to work:

   CLJ-373  Open         0001-Support-empty-path-in-update-in.-CLJ-373.patch
   CLJ-666  Open         0001-Add-Big-support-to-Reflector-Updated.patch
V  CLJ-700  Vetted       clj-700-patch6.txt
   CLJ-1020 Open         clj-1020-inspect-table-skip-nil-rows-patch2.txt
   CLJ-1021 Open         001-propagate-on-macro-meta.diff
   CLJ-1044 Open         001-enable-factory-ctor-inside-deftype.diff
   CLJ-1060 Open         list-star-fix.diff
   CLJ-1242 Open         0001-fix-for-CLJ-1242-tests.patch

      Language/library enhancement:

   CLJ-107  Open         clj-107-add-bit-count-v1.txt
   CLJ-200  Open         clj-200-cond-let-clauses-fixed-test-v2-patch.txt
   CLJ-248  Open         clj-248-SortedMap-SortedSet-interfaces-patch2.txt
   CLJ-308  Open         0001-Added-ClosableResource-protocol-for-with-open.patch
   CLJ-428  Open         clj-428-change-Sorted-seqFrom-to-take-inclusive-patch-v3.txt
V  CLJ-771  Backlog      clj-771-move-unchecked-casts-patch-v5.txt
   CLJ-803  Open         0001-atom-interface.patch
      Both patches apply and build cleanly, iatom.patch using 'patch'
      command.
   CLJ-957  Open         clj-957-allow-typehinting-of-method-signatures-in-deftype-patch2.txt
   CLJ-958  Open         0001-Make-APersistentVector.iterator-slightly-more-effici.patch
   CLJ-970  Open         clj-970-extend-implement-parameterized-types-patch2.txt
   CLJ-978  Open         clojure--bean-support-for-private-implementation-classes-v3.diff
   CLJ-1004 Open         arraychunk-seq-10004.diff
   CLJ-1010 Open         0001-CLJ-1010-Add-a-left-to-right-version-of-comp-comp.patch
   CLJ-1063 Open         clj-1063-add-dissoc-in-patch-v2.txt
      TBD: Open ticket for clojure.incubator for this.
   CLJ-1078 Open         clj-1048-queue-takes-collections.diff
   CLJ-1094 Open         0001-Add-zero-arity-variants-for-every-pred-and-some-fn.patch
   CLJ-1095 Open         0001-map-indexed-accepts-multiple-collections.patch
      0002-Add-test-for-multi-collection-map-indexed-fn.patch includes
      new tests
   CLJ-1097 Open         node-seq.diff
   CLJ-1103 Open         clj-1103-make-conj-assoc-dissoc-handle-args-similarly-v1.txt
   CLJ-1108 Open         clj-1108-enhance-future-call-patch-v2.txt
   CLJ-1120 Open         0001-CLJ-1120-ex-message-ex-cause.patch
T  CLJ-1219 Triaged      0001-CLJ-1219-make-identical-variadic.patch
   CLJ-1239 Open         0001-CLJ-1239-protocol-dispatch-for-clojure.walk.patch
      This one is perhaps preferable to CLJ-1105

      Performance enhancement:

T  CLJ-15   Triaged      lazy-incremental-hashes.diff
   CLJ-99   Open         clj-99-min-key-max-key-performance-v1.txt
   CLJ-703  Open         improve-writeclassfile-perf.patch
   CLJ-862  Open         pmap-chunking-862.diff
T  CLJ-1005 Triaged      0001-Use-transient-map-in-zipmap.2.patch
   CLJ-1080 Open         clj-1080-eliminate-many-reflection-warnings-patch-v3.txt
   CLJ-1087 Open         clj-1087-diff-perf-enhance-patch-v1.txt
   CLJ-1096 Open         inline-get-keyword.diff
   CLJ-1128 Open         0002-Improve-merge-with.patch
   CLJ-1224 Open         0001-CLJ-1224-cache-hasheq-and-hashCode-for-records.patch

      Code cleanup:

   CLJ-842  Open         clj-842-update-clojure.pprint-metadata-v2.txt
   CLJ-1151 Open         tiny-reducers-cleanup.diff

----------------------------------------------------------------------
Prescreened patches that are marked with Fix Version/s =
"Release 1.6", but not screened
----------------------------------------------------------------------
      Doc string fixes only:

V  CLJ-835  Screenable   0001-CLJ-835-Refine-doc-string-for-defmulti-hierarchy-opt.patch
V  CLJ-980  Screenable   extended-type-doc-fix-v2.patch

      Debug/tooling enhancement:

V  CLJ-939  Screenable   clj-939-report-load-exceptions-with-file-and-line-patch-v3.txt
V  CLJ-1076 Screenable   clj-1076-fix-tests-on-windows-patch-v2.txt
V  CLJ-1176 Screenable   0001-CLJ-1176-Bind-read-eval-true-in-clojure.repl-source-.patch

      Clojure language/library bug fixes:

V  CLJ-787  Screenable   CLJ-787-p1.patch
V  CLJ-937  Screenable   clj-937-cl-format-coerces-ratios-patch2.txt
V  CLJ-1082 Screenable   clj-1082-patch-v2.txt
V  CLJ-1090 Screenable   var-clear-locals-patch-v2.txt
V  CLJ-1102 Screenable   clj-1102-improve-empty-stack-trace-handling-v2.txt
V  CLJ-1118 Screenable   clj-1118-make-double-equals-true-for-more-bigdecimals-patch-v4.txt
V  CLJ-1177 Screenable   clj-1177-patch-v2.txt
V  CLJ-1187 Screenable   001-CLJ-1187.patch
V  CLJ-1222 Screenable   min_value_multiplication.diff

      Allow more correct-looking Clojure code to work:

V  CLJ-1148 Screenable   0001-new-defonce-hotness.patch

      Language/library enhancement:

V  CLJ-394  Screenable   clj-394-add-predicates-for-type-and-record.diff
V  CLJ-865  Screenable   clj-865-updated-v2-patch.txt
V  CLJ-866  Screenable   clj-866-test-vars.patch
      See also patch CLJ-866-test.patch, which contains tests for this
      patch.
V  CLJ-1105 Screenable   0001-CLJ-1105-Support-records-in-clojure.walk.patch
      See also CLJ-1239, which might be preferable to this ticket

      Performance enhancement:

V  CLJ-1200 Screenable   no-getComponentType--v001.patch

----------------------------------------------------------------------
Prescreened, and screened or accepted
----------------------------------------------------------------------
      Doc string fixes only:

S  CLJ-1228 Screened     clj-1228-fix-multiple-typos-2.patch

      Better error reporting:

S  CLJ-1083 Screened     clj-1083-better-throw-arity-messages-patch-v6.txt

      Debug/tooling enhancement:

S  CLJ-1122 Screened     contributing.patch

      Clojure language/library bug fixes:

S  CLJ-935  Screened     clj935-2.patch
S  CLJ-1125 Screened     threadlocal-removal-tcrawley-2013-06-14.diff
S  CLJ-1184 Screened     CLJ-1184-p4.patch
S  CLJ-1233 Screened     clj-1233-with-test-v2.txt
S  CLJ-1238 Screened     0001-Fix-CLJ-873-for-EdnReader-too.patch
S  CLJ-1252 Screened     numkeyword.patch

      Allow more correct-looking Clojure code to work:

S  CLJ-766  Screened     clj766-2.patch

      Performance enhancement:

S  CLJ-669  Screened     clj-669-use-java.nio-in-do-copy-for-files-patch-v3.txt
S  CLJ-858  Screened     stm-rm-msecs-patch.diff

----------------------------------------------------------------------
(Note 1) Warnings/errors explicitly allowed in output of 'ant' command

The following warning lines are explicitly allowed in the output of
Oracle JDK 1.7.0:

 [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5

----------------------------------------------------------------------
(Note 2) Rich Hickey requested that enhancements have a wiki page
created for them before any ticket is created.

   http://groups.google.com/group/clojure-dev/browse_frm/thread/8eb9c7efbcb60033
----------------------------------------------------------------------
(Note 3) As documented in the "Process in Detail" section of the
Screening Tickets wiki page at
http://dev.clojure.org/display/community/Screening+Tickets please use
the following command to apply git format patches:
% git am --keep-cr -s --ignore-whitespace < patch_file

Some Clojure source files contain CR/LF endings, and applying such
patches without the --keep-cr option fails with many such patches.

Some patches will produce warnings when applied, but if they have been
prescreened, they did not produce any errors when the command above
was used with the latest Clojure master as of the date of this report.
----------------------------------------------------------------------
(Note 4) Prescreened means:

* The patch is in git format.
* All authors listed in the patch have signed a CA.
* Patch applies cleanly to latest master as of the date of the report
  with all of the OS/JDK combos listed below:
    Mac OS X 10.6.8 + Oracle/Apple JDK 1.6.0_51 64-bit
    Ubuntu 12.04.2 64-bit + OpenJDK 1.6.0_27 64-bit
    Ubuntu 12.04.2 64-bit + Oracle JDK 1.7.0_25 64-bit
* After applying the patch, the command "./antsetup.sh ; ant" compiles
  and passes all tests without warnings or errors (see Note 1 near the
  end for a short list of allowed warnings).

The conditions above are straightforward to automate, and have been
automated.  The patch might still be a bad idea for many reasons,
e.g. it doesn't really fix the problem, there wasn't a problem that
needed fixing to begin with, it isn't backwards compatible with
existing Clojure code, it contains bad spelling/grammar in doc
strings, etc., etc.
