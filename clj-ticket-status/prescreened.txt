List of prescreened patches for CLJ project
Date: July 1, 2014

The first letter on each patch summary line indicates the Approval of
the ticket: "T" for Triaged, "V" for Vetted, etc.  After the ticket id
(CLJ-<number>) is the state of the ticket.  See the JIRA workflow
diagram for details:
    http://dev.clojure.org/display/community/JIRA+workflow

Screeners: See Note 3 near the bottom of this message for the command
to use when applying patches.  See Note 4 near the bottom for the
criteria to call a patch "prescreened".

This list of tickets is intended primarily for Clojure screeners.  If
you are a contributor looking for tickets that need more work, look
for the separate "Tickets needing work" list.  Also consider reading
and evaluating the not-yet-screened patches below to help out the
screeners, adding your comments to the tickets in JIRA with what you
learned.  You can also vote on tickets you want to see fixed.

----------------------------------------------------------------------
Blocking bugs
----------------------------------------------------------------------
One or more contributors consider these bugs to be blocking,
i.e. significant enough to warrant fixing before another release is
made, by saying so on clojure-dev.  If someone from Clojure/core wants
to veto that status, let me know and I'll remove it from this part of
the report.

   <none>

----------------------------------------------------------------------
"Oddballs"
----------------------------------------------------------------------
These are suggested changes to clojure.org web pages, not patches to
Clojure.

   <suggested in email> Remove now-obsolete http://clojure.org/streams and any links to it (RH said in 2009 that streams lost to chunked sequences)

----------------------------------------------------------------------
Enhancement ideas for which it might be time to create a ticket
----------------------------------------------------------------------
Is it OK to create a ticket for these now? (see Note 2 near the end)

   <none>

----------------------------------------------------------------------
Prescreened patches *not* marked with Fix Version/s = "Release 1.7"
----------------------------------------------------------------------
      Doc string fixes only:

   CLJ-1002 Open         document_chunk_fns.patch
V  CLJ-1104 Backlog      clj-1104-doc-unsafety-of-concurrent-with-redefs-v1.txt
T  CLJ-1117 Triaged      clj-1117.patch
   CLJ-1240 Open         0001-CLJ-1240-Note-limits-of-clojure.walk-macroexpand-all.patch
   CLJ-1337 Open         0001-Update-defprotocol-s-docstring-to-remove-an-out-of-d.patch
T  CLJ-1357 Triaged      CLJ-1357-its-typo.patch
   CLJ-1385 Open         CLJ-1385-reword-docstrings-on-transient-update-funct.patch

      Better error reporting:

T  CLJ-735  Triaged      protocolerr.diff
T  CLJ-888  Triaged      0001-Forbid-vararg-declaration-in-defprotocol-definterfac.patch
   CLJ-1030 Open         string-coerce-to-int.diff
V  CLJ-1099 Vetted       better-error-message-for-seq.patch
T  CLJ-1107 Triaged      clj-1107-throw-on-unsupported-get-v4.patch
V  CLJ-1130 Vetted       clj-1130-v5.diff
   CLJ-1162 Open         CLJ-1162-p1.patch
   CLJ-1189 Open         CLJ-1189-p1.patch
   CLJ-1210 Open         extend-io-factory-to-nil.diff
   CLJ-1257 Open         clj-1257-2.diff
T  CLJ-1282 Triaged      CLJ-1282-p2.patch
   CLJ-1319 Open         0001-CLJ-1319-Throw-on-odd-arguments-to-PersistentArrayMa.patch
   CLJ-1341 Open         keyword-1341-2014-02-12.2.patch
   CLJ-1406 Open         0001-modify-clojure.core-load-lib-so-that-it-removes-the-.patch
T  CLJ-1456 Triaged      0001-CLJ-1456-counting-forms-to-catch-malformed-throw-for.patch

      Debug/tooling enhancement:

   CLJ-706  Open         706-fix-deprecation-warnings-on-replicate.diff
      This patch is only to eliminate some use of deprecated symbols.
      706-deprecated-var-warning-patch-v2.txt is the patch that
      implements the warnings when using deprecated symbols, but fails
      tests when applied by itself.  It needs test fixes in other
      706-* patches and then they pass.
T  CLJ-1073 Triaged      clj-1073-add-print-interruptibly-patch-v2.txt
   CLJ-1112 Open         0001-Allow-setting-loading-verbosely-by-system-property.patch
T  CLJ-1209 Triaged      0002-CLJ-1209-show-ex-data-in-clojure-test.patch
   CLJ-1278 Open         CLJ-1278-2.patch

      Clojure language/library bug fixes:

   CLJ-457  Open         clj-457-3.diff
T  CLJ-825  Triaged      clj-825-1.patch
   CLJ-1029 Open         ns-patch.diff
   CLJ-1059 Open         001-clj-1059-make-persistentqueue-implement-list.diff
      or 002-clj-1059-asequential-rebased-to-cached-hasheq.diff
   CLJ-1074 Open         clj-1074-read-infinity-and-nan-patch-v2-plus-edn-reader.patch
   CLJ-1077 Open         thread-bound.diff
   CLJ-1079 Open         CLJ-1079.diff
T  CLJ-1134 Triaged      clj-1134-star-directive-in-cl-format.txt
   CLJ-1137 Open         CLJ-1137-eval-metadata-once.diff
   CLJ-1180 Open         001-CLJ-1180.patch
   CLJ-1216 Open         0001-Create-a-DoExpr.Parser-class-that-delegates-to-BodyE.patch
   CLJ-1217 Open         0001-Don-t-realize-seq-exprs-in-for-unless-necessary.patch
T  CLJ-1225 Triaged      clj-1225-2.txt
   CLJ-1226 Open         0001-fix-CLJ-1226.patch
   CLJ-1229 Open         clj-1229-count-overflow-patch-v1.txt
   CLJ-1237 Open         CLJ-1237c.patch
T  CLJ-1253 Triaged      clj-1253-1.txt
T  CLJ-1254 Triaged      clj-1254-2.diff
   CLJ-1275 Open         0001-Don-t-use-shorthand-for-typehints-when-print-dup.patch
   CLJ-1317 Open         0001-CLJ-1317-fix-seq-zip-to-avoid-spurious-nils.patch
   CLJ-1358 Open         CLJ-1358.patch
T  CLJ-1361 Triaged      simple-ns-pprint-fix.patch
T  CLJ-1372 Triaged      0007-CLJ-1372-consistent-hasheq-for-java.util.-List-Map-M.patch
   CLJ-1379 Open         fix-quoting-in-pass-case.diff
   CLJ-1390 Open         CLJ-1390-pprint-GregorianCalendar.patch
   CLJ-1399 Open         clj-1399.diff
   CLJ-1423 Open         apply-var.patch
   CLJ-1444 Open         0001-Fix-unquote-splicing-for-empty-seqs.patch
T  CLJ-1453 Triaged      0001-Fix-iterator-implementations-to-throw-NSEE-when-exha.patch

      Language enhancement, reducers:

   CLJ-991  Open         reducer-partition-by4.diff
   CLJ-1045 Open         clj-1045-fold-by-halves-patch-v2.txt
   CLJ-1046 Open         drop-while-reducer.patch
      As of Oct 28 2012, some patches for CLJ-992 and CLJ-993 apply, build,
      and test cleanly if applied after the patches for CLJ-1045 and
      CLJ-1046.
   CLJ-1047 Open         001-simplify-fj-importing.patch
   CLJ-1113 Open         reductions-reducer.diff

      Allow more correct-looking Clojure code to work:

   CLJ-666  Open         0001-Add-Big-support-to-Reflector-Updated.patch
   CLJ-1020 Open         clj-1020-inspect-table-skip-nil-rows-patch2.txt
   CLJ-1044 Open         001-enable-factory-ctor-inside-deftype.diff
   CLJ-1060 Open         list-star-fix.diff
V  CLJ-1148 Vetted       clj-1148-defonce-3.patch
   CLJ-1242 Open         0001-fix-for-CLJ-1242-tests.patch

      Language/library enhancement:

   CLJ-107  Open         clj-107-v1.diff
   CLJ-200  Open         clj-200-cond-let-clauses-fixed-test-v2.diff
   CLJ-248  Open         clj-248-SortedMap-SortedSet-interfaces-patch2.txt
T  CLJ-308  Triaged      0001-Added-ClosableResource-protocol-for-with-open.patch
V  CLJ-322  Vetted       compile-interop-1.patch
      Patch compile-interop-1.patch applies and builds cleanly.
      Comment discussion on various approaches to this ticket are
      extensive.
   CLJ-428  Open         clj-428-v4.diff
   CLJ-803  Open         0001-atom-interface.patch
      Both patches apply and build cleanly, iatom.patch using 'patch'
      command.
   CLJ-957  Open         clj-957-allow-typehinting-of-method-signatures-in-deftype-patch2.txt
   CLJ-958  Open         0001-Make-APersistentVector.iterator-slightly-more-effici.patch
   CLJ-970  Open         clj-970-extend-implement-parameterized-types-patch2.txt
   CLJ-978  Open         clojure--bean-support-for-private-implementation-classes-v3.diff
   CLJ-1004 Open         arraychunk-seq-10004.diff
   CLJ-1010 Open         0001-CLJ-1010-Add-a-left-to-right-version-of-comp-comp.patch
   CLJ-1063 Open         clj-1063-add-dissoc-in-patch-v2.txt
      TBD: Open ticket for clojure.incubator for this.
T  CLJ-1078 Triaged      clj-1048-add-queue-functions.diff
T  CLJ-1094 Triaged      0001-Add-zero-arity-variants-for-every-pred-and-some-fn.patch
   CLJ-1095 Open         0001-map-indexed-accepts-multiple-collections.patch
      0002-Add-test-for-multi-collection-map-indexed-fn.patch includes
      new tests
   CLJ-1097 Open         node-seq.diff
   CLJ-1103 Open         clj-1103-4.diff
   CLJ-1108 Open         clj-1108-enhance-future-call-patch-v2.txt
   CLJ-1120 Open         0001-CLJ-1120-ex-message-ex-cause.patch
T  CLJ-1219 Triaged      0001-CLJ-1219-make-identical-variadic.patch
   CLJ-1239 Open         0002-CLJ-1239-protocol-dispatch-for-clojure.walk.patch
   CLJ-1266 Open         floats-intrinsics.diff
T  CLJ-1293 Triaged      CLJ-1293-v001.patch
T  CLJ-1315 Triaged      0001-Don-t-initialize-classes-during-import.patch
   CLJ-1324 Open         clj-1324-1.patch
   CLJ-1340 Open         primitive-cohercion.diff
   CLJ-1366 Open         0002-make-the-reader-return-the-same-empty-map-when-it-re.patch
   CLJ-1375 Open         clj-1375-v1.patch
   CLJ-1383 Open         clj-1383.diff
T  CLJ-1386 Triaged      0002-Add-transient-predicate.patch
   CLJ-1394 Open         pr-str-dispatch-value-safe.diff
   CLJ-1398 Open         0001-update-apache-commons-javadoc-location.patch
      There are 3 separate patches, and it appears the author is
      suggesting all 3 should be applied.  The other two are:

        0002-add-javadoc-lookup-for-guava-and-apache-commons-lang.patch
        0003-add-javadoc-lookup-for-jdk8.patch
   CLJ-1412 Open         0001-Add-2-arity-version-of-cycle-that-takes-the-number-o.patch
   CLJ-1424 Open         clojure-feature-expressions.diff
   CLJ-1425 Open         0001-Fix-map-unquote-splicing.patch
T  CLJ-1451 Triaged      CLJ-1451-take-until.patch
   CLJ-1452 Open         CLJ-1452.patch

      Performance enhancement:

   CLJ-99   Open         clj-99-v1.diff
   CLJ-703  Open         improve-writeclassfile-perf.patch
V  CLJ-1005 Vetted       0001-Use-transient-map-in-zipmap.2.patch
   CLJ-1087 Open         clj-1087-diff-perf-enhance-patch-v1.txt
T  CLJ-1096 Triaged      inline-get-keyword.diff
   CLJ-1128 Open         0002-Improve-merge-with.patch
T  CLJ-1259 Triaged      clj-1259-1.txt
T  CLJ-1277 Triaged      clj-1277-1.txt
T  CLJ-1289 Triaged      CLJ-1289-p1.patch
T  CLJ-1295 Triaged      clj-1295-1.diff
T  CLJ-1373 Triaged      clj-1373.diff
T  CLJ-1410 Triaged      CLJ-1410.patch
   CLJ-1416 Open         0001-CLJ-1416-transients-hash-caching-for-gvec-Object-met.patch
V  CLJ-1420 Backlog      0001-rand-using-ThreadLocalRandom-and-tests-for-random.patch
      This patch requires JDK7 or later, breaking with JDK6.

      Code cleanup:

   CLJ-842  Open         clj-842-update-clojure.pprint-metadata-v2.txt
   CLJ-1151 Open         tiny-reducers-cleanup.diff
T  CLJ-1313 Triaged      clj-1313-v2.diff
   CLJ-1314 Open         clj-1314-v2.diff
T  CLJ-1351 Triaged      0001-remove-unused-swapThunk-method-generation.patch

----------------------------------------------------------------------
Prescreened patches that are marked with Fix Version/s =
"Release 1.7", but not screened
----------------------------------------------------------------------
      Better error reporting:

V  CLJ-1400 Screenable   clj-1400-1.diff

      Debug/tooling enhancement:

V  CLJ-1191 Screenable   clj-1191-patch-v1.txt

      Clojure language/library bug fixes:

V  CLJ-1157 Screenable   20140121_fix_classloader.diff
V  CLJ-1187 Screenable   001-CLJ-1187.patch
V  CLJ-1250 Screenable   CLJ-1250-AllInvokeSites-20140320.patch
V  CLJ-1330 Screenable   0001-Fix-CLJ-1330-make-top-level-named-functions-classnam.patch

      Allow more correct-looking Clojure code to work:

V  CLJ-700  Screenable   clj-700-7.diff

      Language/library enhancement:

V  CLJ-1378 Screenable   clj-1378-v2.diff

      Performance enhancement:

V  CLJ-1224 Screenable   0001-cache-hasheq-and-hashCode-for-records.patch
V  CLJ-1415 Screenable   keyword-cache.diff
V  CLJ-1439 Screenable   0001-Improve-Keyword.intern-performance.patch

----------------------------------------------------------------------
Prescreened, and screened or accepted
----------------------------------------------------------------------
      Better error reporting:

S  CLJ-1261 Screened     clj-1261-5.diff
S  CLJ-1297 Screened     better-error-messages-for-require.diff

      Debug/tooling enhancement:

S  CLJ-1274 Screened     CLJ-1274.patch

      Clojure language/library bug fixes:

S  CLJ-738  Screened     clj-738-v2.diff
S  CLJ-887  Screened     0001-don-t-remove-meta-from-arg-vector-in-maybe-destructu.patch
S  CLJ-1039 Screened     CLJ-1039-tolerate-misleading-type-metadata-on-var-wh.patch
S  CLJ-1100 Screened     clj-1100-v2.patch
S  CLJ-1241 Screened     0001-fix-CLJ-1241.patch
S  CLJ-1322 Screened     doseq.patch
S  CLJ-1362 Screened     clj-1362-v1.patch
S  CLJ-1388 Screened     CLJ-1388-record-equality-and-map-record-factory.patch

      Language enhancement, reducers:

S  CLJ-1185 Screened     CLJ-1181-v002.patch

      Language/library enhancement:

S  CLJ-1251 Screened     CLJ-1251.patch
S  CLJ-1325 Screened     clj-1325-v3.patch
S  CLJ-1429 Screened     clj-1429.patch

      Performance enhancement:

S  CLJ-1384 Screened     CLJ-1384-p2.patch
S  CLJ-1430 Screened     partial-perf.diff

----------------------------------------------------------------------
(Note 1) Warnings/errors explicitly allowed in output of 'ant' command

The following warning lines are explicitly allowed in the output of
Oracle JDK 1.7.0:

 [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5

----------------------------------------------------------------------
(Note 2) Rich Hickey requested that enhancements have a wiki page
created for them before any ticket is created.

   http://groups.google.com/group/clojure-dev/browse_frm/thread/8eb9c7efbcb60033
----------------------------------------------------------------------
(Note 3) As documented in the "Process in Detail" section of the
Screening Tickets wiki page at
http://dev.clojure.org/display/community/Screening+Tickets please use
the following command to apply git format patches:
% git am --keep-cr -s --ignore-whitespace < patch_file

Some Clojure source files contain CR/LF endings, and applying such
patches without the --keep-cr option fails with many such patches.

Some patches will produce warnings when applied, but if they have been
prescreened, they did not produce any errors when the command above
was used with the latest Clojure master as of the date of this report.
----------------------------------------------------------------------
(Note 4) Prescreened means:

* The patch is in git format.
* All authors listed in the patch have signed a CA.
* Patch applies cleanly to latest master as of the date of the report
  with all of the OS/JDK combos listed below:
    Mac OS X 10.8.5 + Oracle/Apple JDK 1.7.0_51 64-bit
    Ubuntu 12.04.4 64-bit + OpenJDK 1.6.0_31 64-bit
    Ubuntu 14.04 64-bit + Oracle JDK 1.7.0_55 64-bit
    Ubuntu 14.04 64-bit + Oracle JDK 1.8.0_05 64-bit
* After applying the patch, the command "./antsetup.sh ; ant" compiles
  and passes all tests without warnings or errors (see Note 1 near the
  end for a short list of allowed warnings).

The conditions above are straightforward to automate, and have been
automated.  The patch might still be a bad idea for many reasons,
e.g. it doesn't really fix the problem, there wasn't a problem that
needed fixing to begin with, it isn't backwards compatible with
existing Clojure code, it contains bad spelling/grammar in doc
strings, etc., etc.
